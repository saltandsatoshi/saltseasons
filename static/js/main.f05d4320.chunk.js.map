{"version":3,"sources":["config.ts","connectors.ts","components/loading.tsx","components/connect.tsx","services/firebase.ts","models/salt_season.ts","services/etherium/index.ts","services/etherium/contracts/sellerv1.ts","services/device.ts","components/eth.tsx","saltseasons/_success.tsx","saltseasons/_salt_season.tsx","saltseasons/index.tsx","services/web3_hooks.ts","app.tsx","reportWebVitals.ts","index.tsx"],"names":["eip1152contractAddress","minterAddress","firebaseConfig","apiKey","projectId","INFURA_JSON_RPC_API","1","42","SELLER_CONTRACT_ADDRESS","POLLING_INTERVAL","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","config","bridge","qrcode","pollingInterval","ledger","LedgerConnector","chainId","url","trezor","TrezorConnector","manifestEmail","manifestAppUrl","Loading","style","display","position","top","width","margin","height","href","fill","attributeName","type","from","to","begin","dur","repeatCount","ConnectorButton","children","theConnector","title","context","useWeb3React","activate","connector","className","onClick","event","stopPropagation","Connect","account","deactivate","error","active","id","message","Connectors","Firebase","initializeApp","collection","firestore","indexByNetworkId","networkId","a","where","get","snapshot","items","docs","map","doc","ss","data","TokenId","getJsonRpcProvider","jsonRPCAPIURL","network","JsonRpcProvider","contractABI","getContract","contractAddress","providerOrSigner","Contract","isMobile","window","innerWidth","props","formatEther","number","Success","React","useState","open","setOpen","state","Dialog","DialogTitle","DialogContent","padding","CircularProgress","onClose","DialogActions","Button","Link","SaltSeasonComponent","saltSeason","provider","ETHERIUM","library","undefined","contract","setContract","useEffect","_contract","SELLERV1","sellerContractAddress","contractToWrite","setContractToWrite","signer","getSigner","currentPrice","setCurrentPrice","priceStep","setPriceStep","tokenPurchaseEvents","setTokenPurchaseEvents","queryFilter","filters","TokenPurchase","then","events","console","log","notice","setNotice","successState","setSuccessState","tokenPurchased","length","allHasBeenPurchased","tokenIds","isReady","currentTokenId","purchase","purchaseToken","erc721ContractAddress","value","transactionResponse","wait","status","Device","Box","flexDirection","justifyContent","flexBasis","fontFamily","fontSize","size","target","Chip","label","color","showThumbnails","posterUrls","posterUrl","original","renderItem","item","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","Reducer","activatingConnector","setActivatingConnector","suppress","ethereum","on","handleConnect","handleChainChanged","handleAccountsChanged","accounts","handleNetworkChanged","removeListener","WEB3HOOKS","tried","setTried","isAuthorized","catch","saltSeasons","setSaltSeasons","SaltSeason","auctions","minHeight","marginTop","getLibrary","Web3Provider","AppWrapper","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+fAuBe,GACbA,uBAxB6B,6CAyB7BC,cAvBoB,6CAwBpBC,eAtBqB,CACrBC,OAAQ,0CAGRC,UAAW,kBAmBXC,oBAb0B,CAC1BC,EAAE,gEACFC,GAAG,+DAYHC,wBAT8B,CAC9BD,GAAG,+CCbCE,EAAmB,KAEZC,EAAW,IAAIC,IAAkB,CAAEC,kBAAmB,CAAC,EAAG,MAE1DC,EAAgB,IAAIC,IAAuB,CACtDC,IAAK,CACHT,EAAGU,EAAOX,oBAAoB,IAEhCY,OAAQ,mCACRC,QAAQ,EACRC,gBAAiBV,IAINW,EAAS,IAAIC,IAAgB,CACxCC,QAAS,EACTC,IAAKP,EAAOX,oBAAoB,GAChCc,gBAAiBV,IAGNe,EAAS,IAAIC,IAAgB,CACxCH,QAAS,EACTC,IAAKP,EAAOX,oBAAoB,GAChCc,gBAAiBV,EACjBiB,cAAe,gBACfC,eAAgB,0BCFHC,MA5Bf,WACE,OACE,qBAAKC,MAAO,CACVC,QAAS,OACTC,SAAU,WAAYC,IAAK,oBAAqBC,MAAO,QAFzD,SAIE,qBAAKJ,MAAO,CACVK,OAAQ,OAAQD,MAAO,IAAKE,OAAQ,KADtC,SAGE,qBACEF,MAAO,GAAIE,OAAQ,GACnBC,KAAK,2BACLC,KAAK,UAHP,SAKE,kCACEC,cAAc,YACdC,KAAK,SACLC,KAAK,UACLC,GAAG,YACHC,MAAM,KAAKC,IAAI,KACfC,YAAY,sBCflBC,EAAgE,SAAC,GAAoC,EAAnCC,SAAoC,IAA1BC,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,MACxFC,EAAUC,cACGC,GAAaF,EAAxBG,UAAwBH,EAAbE,UAGnB,OACE,mBACEf,KAAK,IACLiB,UAAU,aACVC,QAAS,SAAAC,GAGP,OAFAA,EAAMC,kBACNL,EAASJ,IACF,GANX,SASE,sBAAMM,UAAU,QAAhB,SAAyBL,OAqEhBS,MAjEf,WACE,IAAMR,EAAUC,cACR5B,EAAgD2B,EAAhD3B,QAASoC,EAAuCT,EAAvCS,QAASC,EAA8BV,EAA9BU,WAAoBC,GAAUX,EAAlBY,OAAkBZ,EAAVW,OAE9C,OAAKF,EAoBK,qCACN,qBAAII,GAAG,YAAYT,UAAU,iBAA7B,UACE,6BACE,mBAAGjB,KAAK,IAAIiB,UAAU,aACpBC,QAAS,SAAAC,GAEP,OADAA,EAAMC,mBACC,GAHX,SAME,sBAAMH,UAAU,QAAhB,SAAyBK,QAGd,IAAZpC,GACD,6BACE,mBAAGc,KAAK,IAAIiB,UAAU,aACtBC,QAAS,SAAAC,GAEP,OADAA,EAAMC,mBACC,GAHT,SAMA,uBAAMH,UAAU,QAAhB,sBAAkC/B,SAItC,6BACE,mBAAGc,KAAK,IAAIiB,UAAU,aACpBC,QAAS,SAAAC,GAGP,OAFAA,EAAMC,kBACNG,KACO,GAJX,SAOE,sBAAMN,UAAU,QAAhB,2BAIJO,GAAS,oBAAGE,GAAG,SAAST,UAAU,SAAzB,0BAAsCO,EAAMG,cAtDvD,qCACE,qBAAID,GAAG,YAAYT,UAAU,iBAA7B,UACE,6BACE,cAAC,EAAD,CAAiBN,aAAciB,EAAqBhB,MAAM,eAE5D,6BACE,cAAC,EAAD,CAAiBD,aAAciB,EAAmBhB,MAAM,aAE1D,6BACE,cAAC,EAAD,CAAiBD,aAAciB,EAAmBhB,MAAM,aAE1D,6BACE,cAAC,EAAD,CAAiBD,aAAciB,EAA0BhB,MAAM,uBAGjEY,GAAS,oBAAGE,GAAG,SAAST,UAAU,SAAzB,0BAAsCO,EAAMG,e,gBC1C/DE,IAASC,cAAclD,EAAOd,gBAC9B,ICQMiE,EDRYF,IAASG,YCQWD,WAAW,eAE1C,SAAeE,EAAtB,kC,4CAAO,WAAgCC,GAAhC,iBAAAC,EAAA,sEACkBJ,EAAWK,MAAM,YAAa,KAAMF,GAAWG,MADjE,cACCC,EADD,OAECC,EAAQD,EAASE,KAAKC,KAAI,SAAAC,GAC9B,IAAIC,EAAKD,EAAIE,OAEb,OADAD,EAAGjB,GAAKgB,EAAIhB,GACLiB,KALJ,kBAOEJ,GAPF,4C,gFCLQ,OAAEM,QAPD,QAOUC,mBAL1B,SAA4BC,EAAuBC,GAEjD,OADiB,IAAIC,IAAgBF,EAAeC,K,SCJhDE,EAAc,0nFAKL,OAAEA,cAAaC,YAJvB,SAAqBC,EAAyBC,GACnD,OAAO,IAAIC,IAASF,EAAiBF,EAAaG,KCDrC,OAAEE,SAJjB,WACE,OAAOC,OAAOC,WAAa,M,SCkBd,MAdf,SAAgBC,GAGd,OAAO,mDAAOC,YAAYD,EAAME,Y,sDC6CnBC,MAxCf,SAAiBH,GAAe,IAAD,EACLI,IAAMC,UAAS,GADV,mBACtBC,EADsB,KAChBC,EADgB,KAG7B,OAAOP,EAAMQ,OACX,IAAK,SACH,OACE,eAACC,EAAA,EAAD,CAAQH,MAAM,EAAd,UACE,cAACI,EAAA,EAAD,0BACA,cAACC,EAAA,EAAD,CAAe5E,MAAO,CAAE6E,QAAS,IAAjC,SACE,cAACC,EAAA,EAAD,SAIR,IAAK,SACH,OACE,eAACJ,EAAA,EAAD,CAAQH,KAAMA,EAAMQ,QAAS,kBAAMP,GAAQ,IAA3C,UACE,cAACG,EAAA,EAAD,mBACA,cAACC,EAAA,EAAD,CAAe5E,MAAO,CAAE6E,QAAS,IAAjC,SACE,wBAEF,cAACG,EAAA,EAAD,CAAehF,MAAO,CAAE6E,QAAS,IAAjC,SACE,cAACI,EAAA,EAAD,CAAQxD,QAAS,kBAAM+C,GAAQ,IAA/B,wBAIR,IAAK,UACH,OACE,eAACE,EAAA,EAAD,CAAQH,KAAMA,EAAMQ,QAAS,kBAAMP,GAAQ,IAA3C,UACE,cAACG,EAAA,EAAD,sBACA,eAACC,EAAA,EAAD,CAAe5E,MAAO,CAAE6E,QAAS,IAAjC,UACE,uEAA6C,uBAC7C,6CAAe,mBAAGtE,KAAK,qCAAR,oBAAf,uBAEF,cAACyE,EAAA,EAAD,CAAehF,MAAO,CAAE6E,QAAS,IAAjC,SACE,cAACK,EAAA,EAAD,CAAM3E,KAAK,qCAAX,2BC8LG4E,MAtNf,SAA6BlB,GAAe,IAClCmB,EAAenB,EAAfmB,WACFC,EAAWC,EAASjC,mBAAmBlE,EAAOX,oBAAoB4G,EAAW3C,WAAY2C,EAAW3C,WAEpGrB,EAAUC,cACRQ,EAAqBT,EAArBS,QAAS0D,EAAYnE,EAAZmE,QALwB,EAOTlB,IAAMC,cAA+BkB,GAP5B,mBAOlCC,EAPkC,KAOxBC,EAPwB,KAQzCrB,IAAMsB,WAAU,WACd,QAAiBH,IAAbC,EAAJ,CACA,IAAMG,EAAYC,EAASnC,YAAY0B,EAAWU,sBAAuBT,GACzEK,EAAYE,MACX,CAACH,IAZqC,MAcKpB,IAAMC,cAA+BkB,GAd1C,mBAclCO,EAdkC,KAcjBC,EAdiB,KAezC3B,IAAMsB,WAAU,WACd,QAAwBH,IAApBO,GACClE,GAAY0D,EAAjB,CAEA,IAAMU,EAASV,EAAQW,UAAUrE,GAC3B+D,EAAYC,EAASnC,YAAY0B,EAAWU,sBAAuBG,GACzED,EAAmBJ,MAClB,CAACG,EAAiBlE,IAtBoB,MAwBDwC,IAAMC,cAAgCkB,GAxBrC,mBAwBlCW,EAxBkC,KAwBpBC,EAxBoB,KAyBzC/B,IAAMsB,WAAU,WACRQ,GACDV,GAEL,sBAAC,4BAAA/C,EAAA,sEAC4B+C,EAASU,eADrC,OACOA,EADP,OAECC,EAAgBD,GAFjB,0CAAD,KAIC,CAACA,EAAcV,IAjCuB,MAmCPpB,IAAMC,cAAgCkB,GAnC/B,mBAmClCa,EAnCkC,KAmCvBC,EAnCuB,KAoCzCjC,IAAMsB,WAAU,WACRU,GACDZ,GAEL,sBAAC,4BAAA/C,EAAA,sEACyB+C,EAASY,YADlC,OACOA,EADP,OAECC,EAAaD,GAFd,0CAAD,KAIC,CAACA,EAAWZ,IA5C0B,MA8CapB,IAAMC,cAA8BkB,GA9CjD,mBA8ClCe,EA9CkC,KA8CbC,EA9Ca,KA+CzCnC,IAAMsB,WAAU,WACTF,QACuBD,IAAxBe,GACHd,EAAiBgB,YAAYhB,EAASiB,QAAQC,eAAeC,MAAK,SAACC,GAClEC,QAAQC,IAAIF,GACZL,EAAuBK,QAExB,CAACpB,EAAUc,IAtD2B,MAwDblC,IAAMC,cAA6BkB,GAxDtB,mBAwDlCwB,EAxDkC,KAwD1BC,EAxD0B,OAyDD5C,IAAMC,cAAmCkB,GAzDxC,mBAyDlC0B,EAzDkC,KAyDpBC,EAzDoB,KA2DnCC,GAAkBb,GAAuB,IAAIc,OAC7CC,EAAsBlC,EAAWmC,SAASF,SAAWD,EAErDI,OAAmChC,IAAxBe,KAAwCJ,EACnDsB,EAAkBH,OAA4D9B,EAAtCJ,EAAWmC,SAASH,GAE5DM,GAAQ,uCAAG,4BAAAhF,EAAA,yDACVb,EADU,qBACO,qCADP,UAEVsE,EAFU,qBAEY,2CAFZ,UAGVJ,EAHU,qBAGe,sCAHf,UAIV0B,EAJU,qBAIc,iBAJd,wBASyC1B,EAAwB4B,cAAcvC,EAAWwC,sBAAuBH,EAAgB,CAC9II,MAAO1B,IAVM,eAST2B,EATS,iBAYsCA,EAAoBC,KAAK,GAZ/D,WAamB,IAbnB,OAaQC,OAbR,sBAa8B,2BAb9B,4CAAH,qDA0BRlE,GAAWmE,EAAOnE,WAExB,OACE,qCACE,eAACoE,EAAA,EAAD,CAAKjI,QAAQ,OAAOkI,cAAerE,GAAW,SAAW,MAAOsE,eAAe,SAA/E,UACE,sBAAKpI,MAAO,CAAEqI,UAAW,MAAOxD,QAAS,MAAOyD,WAAY,0BAA5D,UACE,oBAAGtI,MAAO,CAAEsI,WAAY,qBAAsBC,SAAU,OAAxD,qBAA0EnD,EAAWjB,UAAW,uBAChG,oBAAInE,MAAO,CAAEsI,WAAY,sBAAzB,SAAkDlD,EAAWjE,QAAW,uBAAK,uBAC7E,iDAAoBiE,EAAWmC,SAASF,UAAW,uBACnD,gDAAoBlB,EAA+C,cAAC,EAAD,CAAYhC,OAAQgC,IAApD,cAACrB,EAAA,EAAD,CAAkB0D,KAAM,QAAgD,uBAC3G,6CAAiBnC,EAA4C,cAAC,EAAD,CAAYlC,OAAQkC,IAApD,cAACvB,EAAA,EAAD,CAAkB0D,KAAM,QAA6C,uBAClG,eAACN,EAAA,EAAD,CAAKjI,QAAQ,OAAOkI,cAAc,MAAMC,eAAe,UAAvD,WACKZ,GAAW,cAAC1C,EAAA,EAAD,CAAkB0D,KAAK,OACnChB,GACA,qCACIF,GAAuB,gDACtBA,GACD,qBAAIrF,GAAG,YAAYT,UAAU,iBAA7B,UACE,6BACE,mBAAGjB,KAAK,IAAIiB,UAAU,aACpBC,QAAO,uCAAE,WAAOC,GAAP,SAAAgB,EAAA,6DACPhB,EAAMC,kBACNsF,OAAUzB,GAFH,kBAICkC,KAJD,OAKLP,EAAgB,UALX,uDAOLA,OAAgB3B,GAChBsB,QAAQ/E,MAAM,UAAd,MACAkF,EAAU,GAAD,cATJ,mBAUE,GAVF,eAYPE,EAAgB,WAZT,mBAaA,GAbA,yDAAF,sDADT,SAgBC,sBAAM3F,UAAU,QAAhB,0BAEH,6BACE,mBAAGjB,KAAK,qCAAqCkI,OAAO,SAClDjH,UAAU,aADZ,SAEC,sBAAMA,UAAU,QAAhB,iCAOXwF,GAAU,cAAC0B,EAAA,EAAD,CAAMC,MAAO3B,EAAQ4B,MAAM,iBAGzC,qBAAK5I,MAAO,CAAEqI,UAAW,OAAzB,SACE,cAAC,IAAD,CACEQ,gBAAgB,EAChB/F,MAAOsC,EAAW0D,WAAW9F,KAAI,SAAA+F,GAAS,MAAK,CAAEC,SAAUD,MAC3DE,WAAY,SAACC,GACX,OAAO,qBACLlJ,MAAO,CACLmJ,gBAAgB,OAAD,OAASD,EAAKF,SAAd,KACfI,mBAAoB,SACpBC,eAAgB,UAChBC,iBAAkB,YAClBhJ,OAAQ,QACRF,MAAO,kBAyDjB8G,GAAgB,cAAC,EAAD,CAASzC,MAAOyC,QCpKzBqC,MAvDf,WACE,IAAMnI,EAAUC,cACRE,EAAuBH,EAAvBG,UAAW9B,EAAY2B,EAAZ3B,QAFF,EAKqC4E,IAAMC,WAL3C,mBAKVkF,EALU,KAKWC,EALX,KAMjBpF,IAAMsB,WAAU,WACV6D,GAAuBA,IAAwBjI,GACjDkI,OAAuBjE,KAExB,CAACgE,EAAqBjI,ICQpB,WAAyD,IAA5BmI,EAA2B,0DACzBrI,cAA5BW,EADqD,EACrDA,OAAQD,EAD6C,EAC7CA,MAAOT,EADsC,EACtCA,SAEvBqE,qBAAU,WAAY,IACZgE,EAAa5F,OAAb4F,SACR,GAAIA,GAAYA,EAASC,KAAO5H,IAAWD,IAAU2H,EAAU,CAC7D,IAAMG,EAAgB,WACpB/C,QAAQC,IAAI,4BACZzF,EAASzC,IAELiL,EAAqB,SAACrK,GAC1BqH,QAAQC,IAAI,6CAA8CtH,GAC1D6B,EAASzC,IAELkL,EAAwB,SAACC,GAC7BlD,QAAQC,IAAI,gDAAiDiD,GACzDA,EAAS3C,OAAS,GACpB/F,EAASzC,IAGPoL,EAAuB,SAACxH,GAC5BqE,QAAQC,IAAI,+CAAgDtE,GAC5DnB,EAASzC,IAQX,OALA8K,EAASC,GAAG,UAAWC,GACvBF,EAASC,GAAG,eAAgBE,GAC5BH,EAASC,GAAG,kBAAmBG,GAC/BJ,EAASC,GAAG,iBAAkBK,GAEvB,WACDN,EAASO,iBACXP,EAASO,eAAe,UAAWL,GACnCF,EAASO,eAAe,eAAgBJ,GACxCH,EAASO,eAAe,kBAAmBH,GAC3CJ,EAASO,eAAe,iBAAkBD,QAI/C,CAACjI,EAAQD,EAAO2H,EAAUpI,IDzC7B6I,ECzBK,WAA4B,IAAD,EACH9I,cAArBC,EADwB,EACxBA,SAAUU,EADc,EACdA,OADc,EAGNsC,oBAAS,GAHH,mBAGzB8F,EAHyB,KAGlBC,EAHkB,KAwBhC,OAnBA1E,qBAAU,WACR9G,EAASyL,eAAe1D,MAAK,SAAC0D,GACxBA,EACFhJ,EAASzC,OAAU2G,GAAW,GAAM+E,OAAM,WACxCF,GAAS,MAGXA,GAAS,QAGZ,CAAE/I,IAGLqE,qBAAU,YACHyE,GAASpI,GACZqI,GAAS,KAEV,CAACD,EAAOpI,IAEJoI,EDFYD,MAG4BX,GAhB9B,MAkBqBnF,IAAMC,cAA8CkB,GAlBzE,mBAkBVgF,EAlBU,KAkBGC,EAlBH,KA6BjB,OAVApG,IAAMsB,WAAU,WACR6E,GAGN,sBAAC,4BAAA9H,EAAA,sEACwBgI,EAA4BjL,GAAW,IAD/D,OACOkL,EADP,OAECF,EAAeE,GAFhB,0CAAD,KAIC,CAACH,EAAa/K,IAEZ+K,EAGH,gCACE,yBAASvI,GAAG,qBAAZ,SACE,qBAAKA,GAAG,cAAcT,UAAU,gCAAgCxB,MAAO,CAAC4K,UAAW,QAAnF,SACE,qBAAKpJ,UAAU,UAAf,SACE,sBAAKA,UAAU,QAAQxB,MAAO,CAAC6E,QAAS,mBAAxC,UACE,oBAAI5C,GAAG,SAASjC,MAAO,CAAEsI,WAAY,sBAArC,yBAEA,cAAC,EAAD,aAMR,cAACJ,EAAA,EAAD,CAAKjI,QAAQ,OAAOkI,cAAc,SAASnI,MAAO,CAAC6K,UAAW,MAAOjC,MAAO,aAA5E,SAEI4B,EAAYxH,KAAI,SAAAoC,GAAU,OACxB,cAAC,EAAD,CAAqBA,WAAYA,YAnBhB,cAAC,EAAD,KEjC7B,SAAS0F,EAAWzF,GAElB,OADgB,IAAI0F,IAAa1F,GAepB2F,OAXf,WACE,OACE,cAAC,IAAD,CAAmBF,WAAYA,EAA/B,SAIE,cAAC,EAAD,OCPSG,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBvE,MAAK,YAAkD,IAA/CwE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.f05d4320.chunk.js","sourcesContent":["const eip1152contractAddress = '0xd07dc4262bcdbf85190c01c996b4c06a461d2430'\n\nconst minterAddress = '0x1efcb24f92daa1e04ba52e3d891beecee00c629d'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC8DwM9z-H9cSTCqHR4UGEvW86jL63sre0\", // \"AIzaSyCccgoP_7ndBWqvZkPbSml3JV4RpRIyERU\",\n  // authDomain: \"saltandsatoshi.firebaseapp.com\",\n  // databaseURL: \"https://saltandsatoshi.firebaseio.com\",\n  projectId: \"saltandsatoshi\",\n  // storageBucket: \"saltandsatoshi.appspot.com\",\n  // messagingSenderId: \"629543041272\",\n  // appId: \"1:629543041272:web:80d0b9de555810bbc9e30d\"\n}\n\nconst INFURA_JSON_RPC_API = {\n  1: `https://mainnet.infura.io/v3/663207cc32894545b804fbc519d9fa2a`,\n  42: `https://kovan.infura.io/v3/663207cc32894545b804fbc519d9fa2a`,\n}\n\nconst SELLER_CONTRACT_ADDRESS = {\n  42: `0xD837F0658c74191056f222b3aCf3995e75AA3703`,\n}\n\nexport default {\n  eip1152contractAddress,\n  minterAddress,\n  firebaseConfig,\n  INFURA_JSON_RPC_API,\n  SELLER_CONTRACT_ADDRESS,\n}","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { LedgerConnector } from '@web3-react/ledger-connector'\nimport { TrezorConnector } from '@web3-react/trezor-connector'\n\nimport config from './config'\n\nconst POLLING_INTERVAL = 12000\n\nexport const injected = new InjectedConnector({ supportedChainIds: [1, 42] })\n\nexport const walletconnect = new WalletConnectConnector({\n  rpc: { \n    1: config.INFURA_JSON_RPC_API[1],\n  },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL\n})\n\n\nexport const ledger = new LedgerConnector({\n  chainId: 1,\n  url: config.INFURA_JSON_RPC_API[1],\n  pollingInterval: POLLING_INTERVAL\n})\n\nexport const trezor = new TrezorConnector({\n  chainId: 1,\n  url: config.INFURA_JSON_RPC_API[1],\n  pollingInterval: POLLING_INTERVAL,\n  manifestEmail: 'dummy@abc.xyz',\n  manifestAppUrl: 'http://localhost:1234'\n})","import React from 'react'\n\nfunction Loading() {\n  return (\n    <div style={{\n      display: 'flex',\n      position: 'absolute', top: 'calc(50% - 100px)', width: '100%',\n    }}>\n      <svg style={{\n        margin: 'auto', width: 200, height: 200,\n      }}>\n        <use\n          width={80} height={80}\n          href=\"assets/icons.svg#refresh\"\n          fill=\"#838b98\"\n        >\n          <animateTransform\n            attributeName=\"transform\"\n            type=\"rotate\"\n            from=\"0 40 40\"\n            to=\"360 40 40\"\n            begin=\"0s\" dur=\"4s\"\n            repeatCount=\"indefinite\"\n          />\n        </use>\n      </svg>\n    </div>\n  )   \n}\n\nexport default Loading","import React from 'react'\n\nimport { Web3ReactProvider, useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\n\nimport * as Connectors from '../connectors'\n\nconst ConnectorButton: React.FC<{theConnector: any, title: string}> = ({children, theConnector, title}) => {\n  const context = useWeb3React<Web3Provider>()\n  const { connector, activate } = context\n  const isConnected = connector === theConnector\n\n  return (\n    <a\n      href=\"#\"\n      className=\"button n01\"\n      onClick={event => {\n        event.stopPropagation()\n        activate(theConnector)\n        return false\n      }}\n    >\n      <span className=\"label\">{title}</span>\n    </a>)\n}\n\nfunction Connect() {\n  const context = useWeb3React<Web3Provider>()\n  const { chainId, account, deactivate, active, error } = context\n\n  if (!account) {\n    return (\n      <>\n        <ul id=\"buttons02\" className=\"style1 buttons\">\n          <li>\n            <ConnectorButton theConnector={Connectors.injected} title=\"Metamask\"/>\n          </li>\n          <li>\n            <ConnectorButton theConnector={Connectors.ledger} title=\"Ledger\"/>\n          </li>\n          <li>\n            <ConnectorButton theConnector={Connectors.trezor} title=\"Trezor\"/>\n          </li>\n          <li>\n            <ConnectorButton theConnector={Connectors.walletconnect} title=\"Walletconnect\"/>\n          </li>\n        </ul>\n        { error && <p id=\"text34\" className=\"style2\">⚠️ {error.message}</p> }\n      </>)\n  } else {\n    return (<>\n      <ul id=\"buttons02\" className=\"style1 buttons\">\n        <li>\n          <a href=\"#\" className=\"button n01\"\n            onClick={event => {\n              event.stopPropagation()\n              return false\n            }}\n          >\n            <span className=\"label\">{account}</span>\n          </a>\n        </li>\n        { (chainId !== 1) && (\n          <li>\n            <a href=\"#\" className=\"button n01\"\n            onClick={event => {\n              event.stopPropagation()\n              return false\n            }}\n          >\n            <span className=\"label\">Network: {chainId}</span>\n          </a>\n          </li>\n        )}\n        <li>\n          <a href=\"#\" className=\"button n01\"\n            onClick={event => {\n              event.stopPropagation()\n              deactivate()\n              return false\n            }}\n          >\n            <span className=\"label\">Logout</span>\n          </a>\n        </li>\n      </ul>\n      { error && <p id=\"text34\" className=\"style2\">⚠️ {error.message}</p> }\n    </>)\n  }\n}\n\nexport default Connect","import Firebase from 'firebase'\nimport \"firebase/firestore\"\n\nimport config from '../config'\n\nFirebase.initializeApp(config.firebaseConfig)\nconst firestore = Firebase.firestore()\n\nexport { firestore }","import * as Firebase from '../services/firebase'\n\nexport type SaltSeason = {\n  id: string\n  number: string\n  title: string\n  posterUrls: string[]\n  networkId: 1 | 42\n  erc721ContractAddress: string\n  sellerContractAddress: string\n  tokenIds: number[]\n  // purchasedItems: number\n}\n\nconst collection = Firebase.firestore.collection('saltseasons')\n\nexport async function indexByNetworkId(networkId: number) {\n  const snapshot = await collection.where('networkId', '==', networkId).get()\n  const items = snapshot.docs.map(doc => {\n    var ss = doc.data() as SaltSeason\n    ss.id = doc.id\n    return ss\n  })\n  return items\n}\n\nexport async function update(ss: SaltSeason) {\n  const doc = collection.doc(ss.id)\n  await doc.set(ss)\n}","import { JsonRpcProvider, JsonRpcSigner } from '@ethersproject/providers'\n\n// EIP 1155\n\nconst TokenId = '20272'\n\nfunction getJsonRpcProvider(jsonRPCAPIURL: string, network: number): JsonRpcProvider {\n  const provider = new JsonRpcProvider(jsonRPCAPIURL, network)\n  return provider\n}\n\nexport default { TokenId, getJsonRpcProvider }","import { Contract } from '@ethersproject/contracts'\nimport { JsonRpcProvider, JsonRpcSigner } from '@ethersproject/providers'\n\nconst contractABI = '[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_priceStep\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"currentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceStep\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"purchaseToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_payee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sendTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]'\nexport function getContract(contractAddress: string, providerOrSigner: JsonRpcProvider | JsonRpcSigner) {\n  return new Contract(contractAddress, contractABI, providerOrSigner)\n}\n\nexport default { contractABI, getContract }","function isMobile() {\n  return window.innerWidth < 750\n}\n\nexport default { isMobile }","import React from 'react'\n\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { formatEther } from '@ethersproject/units'\n\nfunction Number(props: {\n  number: BigNumber\n}) {\n  return <>{`Ξ${formatEther(props.number)}`}</>\n}\n\nfunction AddressLink(props: {\n  address: string\n  chainId: 1 | 42\n}) {\n  const url = `https://${ props.chainId === 42 ? `kovan.` : ``}etherscan.io/address/${props.address}`\n  return <a href={url} target=\"_blank\">{`${props.address.slice(0, 10)}...`}</a>\n}\n\nexport default { Number, AddressLink }","import React from 'react'\n\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Link, CircularProgress, Button } from '@material-ui/core'\nimport { SaltSeason } from '../models/salt_season'\n\nexport type State = 'MINING' | 'FAILED' | 'SUCCESS'\n\ntype Props = {\n  // saltSeason: SaltSeason\n  // tokenId: number\n  state: State\n}\n\nfunction Success(props: Props) {\n  const [open, setOpen] = React.useState(true)\n\n  switch(props.state) {\n    case 'MINING':\n      return (\n        <Dialog open={true}>\n          <DialogTitle>Please wait</DialogTitle>\n          <DialogContent style={{ padding: 30 }}>\n            <CircularProgress/>\n          </DialogContent>\n        </Dialog>)\n\n    case 'FAILED':\n      return (\n        <Dialog open={open} onClose={() => setOpen(false)}>\n          <DialogTitle>Oops</DialogTitle>\n          <DialogContent style={{ padding: 30 }}>\n            <p></p>\n          </DialogContent>\n          <DialogActions style={{ padding: 30 }}>\n            <Button onClick={() => setOpen(false)}>Close</Button>\n          </DialogActions>\n        </Dialog>)\n\n    case 'SUCCESS':\n      return (\n        <Dialog open={open} onClose={() => setOpen(false)}>\n          <DialogTitle>Hooray!</DialogTitle>\n          <DialogContent style={{ padding: 30 }}>\n            <p>You are the owner of unique SaltSeason</p><br/>\n            <p>Now you can <a href=\"https://redeem.saltandsatoshi.com/\">redeem</a> your purchase</p>\n          </DialogContent>\n          <DialogActions style={{ padding: 30 }}>\n            <Link href=\"https://redeem.saltandsatoshi.com/\">Redeem</Link>\n          </DialogActions>\n        </Dialog>)\n  }\n}\n\nexport default Success","import React from 'react'\n\nimport { useWeb3React } from '@web3-react/core'\nimport { TransactionReceipt, TransactionResponse, Web3Provider } from '@ethersproject/providers'\n\nimport {  Box, CircularProgress, Chip } from '@material-ui/core'\nimport ImageGallery, { ReactImageGalleryItem } from 'react-image-gallery'\n\nimport config from '../config'\n\nimport { Contract, Event } from '@ethersproject/contracts'\nimport ETHERIUM from '../services/etherium'\nimport SELLERV1 from '../services/etherium/contracts/sellerv1'\nimport Device from '../services/device'\nimport ETH from '../components/eth'\nimport * as SaltSeason from '../models/salt_season'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport Success, { State as SuccessState } from './_success'\n\ntype Props = {\n  saltSeason: SaltSeason.SaltSeason\n}\n\nfunction SaltSeasonComponent(props: Props) {\n  const { saltSeason } = props\n  const provider = ETHERIUM.getJsonRpcProvider(config.INFURA_JSON_RPC_API[saltSeason.networkId], saltSeason.networkId);\n\n  const context = useWeb3React<Web3Provider>()\n  const { account, library } = context\n\n  const [contract, setContract] = React.useState<Contract | undefined>(undefined)\n  React.useEffect(() => {\n    if (contract !== undefined) { return }\n    const _contract = SELLERV1.getContract(saltSeason.sellerContractAddress, provider)\n    setContract(_contract)\n  }, [contract])\n\n  const [contractToWrite, setContractToWrite] = React.useState<Contract | undefined>(undefined)\n  React.useEffect(() => {\n    if (contractToWrite !== undefined) { return }\n    if (!account || !library) { return }\n\n    const signer = library.getSigner(account)\n    const _contract = SELLERV1.getContract(saltSeason.sellerContractAddress, signer)\n    setContractToWrite(_contract)\n  }, [contractToWrite, account])\n\n  const [currentPrice, setCurrentPrice] = React.useState<BigNumber | undefined>(undefined)\n  React.useEffect(() => {\n    if (!!currentPrice) { return } // guard: already done\n    if (!contract) { return } // guard\n\n    (async () => {\n      const currentPrice = await contract.currentPrice()\n      setCurrentPrice(currentPrice)\n    })()\n  }, [currentPrice, contract])\n\n  const [priceStep, setPriceStep] = React.useState<BigNumber | undefined>(undefined)\n  React.useEffect(() => {\n    if (!!priceStep) { return } // guard: already done\n    if (!contract) { return } // guard\n\n    (async () => {\n      const priceStep = await contract.priceStep()\n      setPriceStep(priceStep)\n    })()\n  }, [priceStep, contract])\n\n  const [tokenPurchaseEvents, setTokenPurchaseEvents] = React.useState<Event[] | undefined>(undefined)\n  React.useEffect(() => {\n    if (!contract) { return }\n    if (tokenPurchaseEvents !== undefined) { return }\n    (contract as any).queryFilter(contract.filters.TokenPurchase).then((events: Event[]) => {\n      console.log(events)\n      setTokenPurchaseEvents(events)\n    })\n  }, [contract, tokenPurchaseEvents])\n\n  const [notice, setNotice] = React.useState<string | undefined>(undefined)\n  const [successState, setSuccessState] = React.useState<SuccessState | undefined>(undefined)\n\n  const tokenPurchased = (tokenPurchaseEvents || []).length\n  const allHasBeenPurchased = saltSeason.tokenIds.length === tokenPurchased\n\n  const isReady = (tokenPurchaseEvents !== undefined) && !!currentPrice\n  const currentTokenId = !allHasBeenPurchased ? saltSeason.tokenIds[tokenPurchased] : undefined\n\n  const purchase = async () => {\n    if (!account) { throw(\"Connect to blockchain (no account)\") }\n    if (!currentPrice) { throw(\"Connect to blockchain (no contract data)\") }\n    if (!contractToWrite) { throw(\"Connect to blockchain (no contract)\") }\n    if (!currentTokenId) { throw(\"Season is over\") }\n\n    // for test\n    // const transactionResponse: TransactionResponse = await (contractToWrite as any).sendTo('0xC5Ddcb2812dd0D6a61a94310E4AA57c5122438Ca', 1)\n\n    const transactionResponse: TransactionResponse = await (contractToWrite as any).purchaseToken(saltSeason.erc721ContractAddress, currentTokenId, {\n      value: currentPrice\n    })\n    const transactionReceipt: TransactionReceipt = await transactionResponse.wait(1)\n    if (transactionReceipt.status === 0) { throw 'Transaction was reverted' }\n\n    // saltSeason.purchasedItems += 1\n    // await SaltSeason.update(saltSeason)\n  }\n\n  // const carouselRef = React.createRef<HTMLDivElement>()\n  // React.useEffect(() => {\n  //   if(!!carouselRef.current) {\n  //     carouselRef.current.querySelectorAll(`[role=presentation]`)[0].setAttribute(\"style\", \"position: absolute; width: 100%; height: 100%;\");\n  //   }\n  // }, [])\n\n  const isMobile = Device.isMobile();\n\n  return (\n    <>\n      <Box display=\"flex\" flexDirection={isMobile ? 'column' : 'row'} justifyContent=\"center\">\n        <div style={{ flexBasis: '35%', padding: '3em', fontFamily: 'MontserraT, sans-serif' }}>\n          <p style={{ fontFamily: \"'Permanent Marker'\", fontSize: '2em' }}>SEASON: {saltSeason.number}</p><br/>\n          <h5 style={{ fontFamily: \"'Permanent Marker'\" }}>{saltSeason.title}</h5><br/><br/>\n          <p>NUMBER CREATED: {saltSeason.tokenIds.length}</p><br/>\n          <p>CURRENT PRICE: {!currentPrice ? <CircularProgress size={15}/> : <ETH.Number number={currentPrice}/>}</p><br/>\n          <p>PRICE STEP: {!priceStep ? <CircularProgress size={15}/> : <ETH.Number number={priceStep}/>}</p><br/>\n          <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"between\">\n            { !isReady && <CircularProgress size=\"20\"/> }\n            { isReady && (\n              <>\n                { allHasBeenPurchased && <p>Season is over</p> } \n                { !allHasBeenPurchased && (\n                  <ul id=\"buttons02\" className=\"style1 buttons\">\n                    <li>\n                      <a href=\"#\" className=\"button n01\"\n                        onClick={async (event) => {\n                          event.stopPropagation()\n                          setNotice(undefined)\n                          try {\n                            await purchase()\n                            setSuccessState('MINING')\n                          } catch(error) {\n                            setSuccessState(undefined)\n                            console.error(\"[ERROR]\", error)\n                            setNotice(`${error}`)\n                            return false\n                          }\n                          setSuccessState('SUCCESS')\n                          return false\n                        }}\n                      ><span className=\"label\">Purchase</span></a>\n                    </li>\n                    <li>\n                      <a href=\"https://redeem.saltandsatoshi.com/\" target=\"_blank\"\n                        className=\"button n01\"\n                      ><span className=\"label\">Redeem</span></a>\n                    </li>\n                  </ul>\n                ) }\n              </>\n            ) }\n          </Box>\n          { notice && <Chip label={notice} color=\"secondary\"/> }\n        </div>\n      \n        <div style={{ flexBasis: '55%' }}>\n          <ImageGallery\n            showThumbnails={false}\n            items={saltSeason.posterUrls.map(posterUrl => ({ original: posterUrl }))}\n            renderItem={(item: ReactImageGalleryItem) => {\n              return <div\n                style={{\n                  backgroundImage: `url(${item.original})`,\n                  backgroundPosition: 'center',\n                  backgroundSize: 'contain',\n                  backgroundRepeat: 'no-repeat',\n                  height: '500px',\n                  width: '100%'\n                }}\n              />\n            }}\n          />\n        </div>\n\n        {/* <div style={{position: 'relative', height: 600, flexBasis: '65%'}} ref={carouselRef}>\n          <AutoRotatingCarousel\n            open={true}\n            autoplay={true}\n            containerStyle={{position: 'absolute', top: 0, width: '100%'}}\n            ModalProps={{disablePortal: true, hideBackdrop: true, disableScrollLock: true}}\n            ButtonProps={{variant: 'outlined'}}\n            interval={5000}\n          >\n            <Slide\n              media={\n                <div\n                  style={{\n                    backgroundImage: `url(${saltSeason.posterUrl})`,\n                    backgroundPosition: 'center',\n                    backgroundSize: 'contain',\n                    backgroundRepeat: 'no-repeat',\n                    height: '100%',\n                    width: '100%'\n                  }}\n                />\n              }\n              mediaBackgroundStyle={{ backgroundColor: 'black', height: 400 }}\n              style={{ backgroundColor: 'black' }}\n              title={`SEASON ${saltSeason.number}`}\n              mobile\n              landscape\n              // subtitle='Just using this will blow your mind.'\n            />\n            <Slide\n              media={\n                <div\n                  style={{\n                    backgroundImage: `url(${\"https://firebasestorage.googleapis.com/v0/b/saltandsatoshi.appspot.com/o/SaltSeasons%2FSalt%20Season%201%20Ethereum%20GIF%20600.gif?alt=media&token=2ed90c2b-2864-40bc-9710-b564348c33a0\"})`,\n                    backgroundPosition: 'center',\n                    backgroundSize: 'contain',\n                    backgroundRepeat: 'no-repeat',\n                    height: '100%',\n                    width: '100%'\n                  }}\n                />\n              }\n              mediaBackgroundStyle={{ backgroundColor: 'black', height: 400 }}\n              style={{ backgroundColor: 'black' }}\n              title={`SEASON ${saltSeason.number}`}\n              // subtitle='Just using this will blow your mind.'\n            />\n          </AutoRotatingCarousel> \n        </div> */}\n      </Box>\n      { successState && <Success state={successState}/> }\n    </>)\n}\n\nexport default SaltSeasonComponent","import React from 'react'\n\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\n\nimport * as WEB3HOOKS from '../services/web3_hooks'\nimport Loading from '../components/loading'\nimport Connect from '../components/connect'\n\nimport * as SaltSeason from '../models/salt_season'\nimport SaltSeasonComponent from './_salt_season'\n\nimport { Box } from '@material-ui/core'\n\nfunction Reducer() {\n  const context = useWeb3React<Web3Provider>()\n  const { connector, chainId } = context\n\n  // handle logic to recognize the connector currently being activated\n  const [activatingConnector, setActivatingConnector] = React.useState<any>()\n  React.useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined)\n    }\n  }, [activatingConnector, connector])\n\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n  const triedEager = WEB3HOOKS.useEagerConnect()\n\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n  WEB3HOOKS.useInactiveListener(!triedEager || !!activatingConnector)\n\n  const [saltSeasons, setSaltSeasons] = React.useState<SaltSeason.SaltSeason[] | undefined>(undefined)\n  React.useEffect(() => { // Load auctions from Firebase\n    if (!!saltSeasons) { return } // guard: already done\n    // if (!chainId) { return }\n\n    (async () => {\n      const auctions = await SaltSeason.indexByNetworkId(chainId || 42)\n      setSaltSeasons(auctions)\n    })()\n  }, [saltSeasons, chainId])\n\n  if (!saltSeasons) { return <Loading/> }\n\n  return (\n    <div>\n      <section id=\"redemption-section\">\n        <div id=\"container19\" className=\"container default full screen\" style={{minHeight: 'auto'}}>\n          <div className=\"wrapper\">\n            <div className=\"inner\" style={{padding: '3em 6em 1em 6em'}}>\n              <h2 id=\"text33\" style={{ fontFamily: \"'Permanent Marker'\" }}>SaltSeasons</h2>\n              {/* { !account && (<p id=\"text34\" className=\"style2\">Please connect to see available auctions</p>)} */}\n              <Connect/>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <Box display=\"flex\" flexDirection=\"column\" style={{marginTop: '3em', color: 'lightgray'}}>\n        {\n          saltSeasons.map(saltSeason => (\n            <SaltSeasonComponent saltSeason={saltSeason}/>\n          ))\n        }\n      </Box>\n    </div>)\n}\n\nexport default Reducer","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { injected } from '../connectors'\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, [ activate ]) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n\nexport function useInactiveListener(suppress: boolean = false) {\n  const { active, error, activate } = useWeb3React()\n\n  useEffect((): any => {\n    const { ethereum } = window as any\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\")\n        activate(injected)\n      }\n      const handleChainChanged = (chainId: string | number) => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId)\n        activate(injected)\n      }\n      const handleAccountsChanged = (accounts: string[]) => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n        if (accounts.length > 0) {\n          activate(injected)\n        }\n      }\n      const handleNetworkChanged = (networkId: string | number) => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId)\n        activate(injected)\n      }\n\n      ethereum.on('connect', handleConnect)\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n      ethereum.on('networkChanged', handleNetworkChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect)\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n          ethereum.removeListener('networkChanged', handleNetworkChanged)\n        }\n      }\n    }\n  }, [active, error, suppress, activate])\n}","import React from 'react'\n\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\n\nimport RedeemPage from './redeem_page/page'\nimport ShowcasePage from './showcase_page/page'\nimport AuctionsPage from './auctions_page/page'\nimport SaltSeasonsPage from './saltseasons/index'\n\nfunction getLibrary(provider: any): Web3Provider {\n  const library = new Web3Provider(provider)\n  return library\n}\n\nfunction AppWrapper() {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      {/* <RedeemPage/> */}\n      {/* <ShowcasePage/> */}\n      {/* <AuctionsPage/> */}\n      <SaltSeasonsPage/>\n    </Web3ReactProvider>\n  )\n}\n\nexport default AppWrapper\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}