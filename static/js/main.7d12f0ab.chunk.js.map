{"version":3,"sources":["config.ts","connectors.ts","components/loading.tsx","components/connect.tsx","services/firebase.ts","models/salt_season.ts","services/etherium/index.ts","services/etherium/contracts/sellerv1.ts","components/eth.tsx","saltseasons/_salt_season.tsx","saltseasons/index.tsx","services/web3_hooks.ts","app.tsx","reportWebVitals.ts","index.tsx"],"names":["eip1152contractAddress","minterAddress","firebaseConfig","apiKey","projectId","INFURA_JSON_RPC_API","1","42","SELLER_CONTRACT_ADDRESS","POLLING_INTERVAL","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","config","bridge","qrcode","pollingInterval","ledger","LedgerConnector","chainId","url","trezor","TrezorConnector","manifestEmail","manifestAppUrl","Loading","style","display","position","top","width","margin","height","href","fill","attributeName","type","from","to","begin","dur","repeatCount","ConnectorButton","children","theConnector","title","context","useWeb3React","activate","connector","className","onClick","event","stopPropagation","Connect","account","deactivate","error","active","id","message","Connectors","Firebase","initializeApp","collection","firestore","indexByNetworkId","networkId","a","where","get","snapshot","items","docs","map","doc","data","TokenId","getJsonRpcProvider","jsonRPCAPIURL","network","JsonRpcProvider","contractABI","getContract","contractAddress","providerOrSigner","Contract","props","formatEther","number","SaltSeasonComponent","provider","ETHERIUM","saltSeason","library","React","useState","undefined","contract","setContract","useEffect","_contract","SELLERV1","sellerContractAddress","contractToWrite","setContractToWrite","signer","getSigner","currentPrice","setCurrentPrice","notice","setNotice","allHasBeenPurchased","tokenIds","length","purchasedItems","currentTokenId","Box","flexDirection","justifyContent","flexBasis","backgroundImage","posterUrl","backgroundPosition","backgroundSize","backgroundRepeat","minHeight","padding","fontFamily","CircularProgress","size","color","border","purchaseToken","erc721ContractAddress","value","target","Chip","label","Reducer","activatingConnector","setActivatingConnector","suppress","ethereum","window","on","handleConnect","console","log","handleChainChanged","handleAccountsChanged","accounts","handleNetworkChanged","removeListener","WEB3HOOKS","tried","setTried","isAuthorized","then","catch","saltSeasons","setSaltSeasons","SaltSeason","auctions","marginTop","getLibrary","Web3Provider","AppWrapper","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d12f0ab.chunk.js","sourcesContent":["const eip1152contractAddress = '0xd07dc4262bcdbf85190c01c996b4c06a461d2430'\n\nconst minterAddress = '0x1efcb24f92daa1e04ba52e3d891beecee00c629d'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC8DwM9z-H9cSTCqHR4UGEvW86jL63sre0\", // \"AIzaSyCccgoP_7ndBWqvZkPbSml3JV4RpRIyERU\",\n  // authDomain: \"saltandsatoshi.firebaseapp.com\",\n  // databaseURL: \"https://saltandsatoshi.firebaseio.com\",\n  projectId: \"saltandsatoshi\",\n  // storageBucket: \"saltandsatoshi.appspot.com\",\n  // messagingSenderId: \"629543041272\",\n  // appId: \"1:629543041272:web:80d0b9de555810bbc9e30d\"\n}\n\nconst INFURA_JSON_RPC_API = {\n  1: `https://mainnet.infura.io/v3/663207cc32894545b804fbc519d9fa2a`,\n  42: `https://kovan.infura.io/v3/663207cc32894545b804fbc519d9fa2a`,\n}\n\nconst SELLER_CONTRACT_ADDRESS = {\n  42: `0xD837F0658c74191056f222b3aCf3995e75AA3703`,\n}\n\nexport default {\n  eip1152contractAddress,\n  minterAddress,\n  firebaseConfig,\n  INFURA_JSON_RPC_API,\n  SELLER_CONTRACT_ADDRESS,\n}","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { LedgerConnector } from '@web3-react/ledger-connector'\nimport { TrezorConnector } from '@web3-react/trezor-connector'\n\nimport config from './config'\n\nconst POLLING_INTERVAL = 12000\n\nexport const injected = new InjectedConnector({ supportedChainIds: [1, 42] })\n\nexport const walletconnect = new WalletConnectConnector({\n  rpc: { \n    1: config.INFURA_JSON_RPC_API[1],\n  },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL\n})\n\n\nexport const ledger = new LedgerConnector({\n  chainId: 1,\n  url: config.INFURA_JSON_RPC_API[1],\n  pollingInterval: POLLING_INTERVAL\n})\n\nexport const trezor = new TrezorConnector({\n  chainId: 1,\n  url: config.INFURA_JSON_RPC_API[1],\n  pollingInterval: POLLING_INTERVAL,\n  manifestEmail: 'dummy@abc.xyz',\n  manifestAppUrl: 'http://localhost:1234'\n})","import React from 'react'\n\nfunction Loading() {\n  return (\n    <div style={{\n      display: 'flex',\n      position: 'absolute', top: 'calc(50% - 100px)', width: '100%',\n    }}>\n      <svg style={{\n        margin: 'auto', width: 200, height: 200,\n      }}>\n        <use\n          width={80} height={80}\n          href=\"assets/icons.svg#refresh\"\n          fill=\"#838b98\"\n        >\n          <animateTransform\n            attributeName=\"transform\"\n            type=\"rotate\"\n            from=\"0 40 40\"\n            to=\"360 40 40\"\n            begin=\"0s\" dur=\"4s\"\n            repeatCount=\"indefinite\"\n          />\n        </use>\n      </svg>\n    </div>\n  )   \n}\n\nexport default Loading","import React from 'react'\n\nimport { Web3ReactProvider, useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\n\nimport * as Connectors from '../connectors'\n\nconst ConnectorButton: React.FC<{theConnector: any, title: string}> = ({children, theConnector, title}) => {\n  const context = useWeb3React<Web3Provider>()\n  const { connector, activate } = context\n  const isConnected = connector === theConnector\n\n  return (\n    <a\n      href=\"#\"\n      className=\"button n01\"\n      onClick={event => {\n        event.stopPropagation()\n        activate(theConnector)\n        return false\n      }}\n    >\n      <span className=\"label\">{title}</span>\n    </a>)\n}\n\nfunction Connect() {\n  const context = useWeb3React<Web3Provider>()\n  const { chainId, account, deactivate, active, error } = context\n\n  if (!account) {\n    return (\n      <>\n        <ul id=\"buttons02\" className=\"style1 buttons\">\n          <li>\n            <ConnectorButton theConnector={Connectors.injected} title=\"Metamask\"/>\n          </li>\n          <li>\n            <ConnectorButton theConnector={Connectors.ledger} title=\"Ledger\"/>\n          </li>\n          <li>\n            <ConnectorButton theConnector={Connectors.trezor} title=\"Trezor\"/>\n          </li>\n          <li>\n            <ConnectorButton theConnector={Connectors.walletconnect} title=\"Walletconnect\"/>\n          </li>\n        </ul>\n        { error && <p id=\"text34\" className=\"style2\">⚠️ {error.message}</p> }\n      </>)\n  } else {\n    return (<>\n      <ul id=\"buttons02\" className=\"style1 buttons\">\n        <li>\n          <a href=\"#\" className=\"button n01\"\n            onClick={event => {\n              event.stopPropagation()\n              return false\n            }}\n          >\n            <span className=\"label\">{account}</span>\n          </a>\n        </li>\n        { (chainId !== 1) && (\n          <li>\n            <a href=\"#\" className=\"button n01\"\n            onClick={event => {\n              event.stopPropagation()\n              return false\n            }}\n          >\n            <span className=\"label\">Network: {chainId}</span>\n          </a>\n          </li>\n        )}\n        <li>\n          <a href=\"#\" className=\"button n01\"\n            onClick={event => {\n              event.stopPropagation()\n              deactivate()\n              return false\n            }}\n          >\n            <span className=\"label\">Logout</span>\n          </a>\n        </li>\n      </ul>\n      { error && <p id=\"text34\" className=\"style2\">⚠️ {error.message}</p> }\n    </>)\n  }\n}\n\nexport default Connect","import Firebase from 'firebase'\nimport \"firebase/firestore\"\n\nimport config from '../config'\n\nFirebase.initializeApp(config.firebaseConfig)\nconst firestore = Firebase.firestore()\n\nexport { firestore }","import * as Firebase from '../services/firebase'\n\nexport type SaltSeason = {\n  number: string\n  title: string\n  posterUrl: string\n  networkId: 1 | 42\n  erc721ContractAddress: string\n  sellerContractAddress: string\n  tokenIds: number[]\n  purchasedItems: number\n}\n\nconst collection = Firebase.firestore.collection('saltseasons')\n\nexport async function indexByNetworkId(networkId: number) {\n  const snapshot = await collection.where('networkId', '==', networkId).get()\n  const items = snapshot.docs.map(doc => doc.data() as SaltSeason)\n  return items\n}","import { JsonRpcProvider, JsonRpcSigner } from '@ethersproject/providers'\n\n// EIP 1155\n\nconst TokenId = '20272'\n\nfunction getJsonRpcProvider(jsonRPCAPIURL: string, network: number): JsonRpcProvider {\n  const provider = new JsonRpcProvider(jsonRPCAPIURL, network)\n  return provider\n}\n\nexport default { TokenId, getJsonRpcProvider }","import { Contract } from '@ethersproject/contracts'\nimport { JsonRpcProvider, JsonRpcSigner } from '@ethersproject/providers'\n\nconst contractABI = '[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_priceStep\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"currentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceStep\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"purchaseToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_payee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sendTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]'\nexport function getContract(contractAddress: string, providerOrSigner: JsonRpcProvider | JsonRpcSigner) {\n  return new Contract(contractAddress, contractABI, providerOrSigner)\n}\n\nexport default { contractABI, getContract }","import React from 'react'\n\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { formatEther } from '@ethersproject/units'\n\nfunction Number(props: {\n  number: BigNumber\n}) {\n  return <>{`Ξ${formatEther(props.number)}`}</>\n}\n\nfunction AddressLink(props: {\n  address: string\n  chainId: 1 | 42\n}) {\n  const url = `https://${ props.chainId === 42 ? `kovan.` : ``}etherscan.io/address/${props.address}`\n  return <a href={url} target=\"_blank\">{`${props.address.slice(0, 10)}...`}</a>\n}\n\nexport default { Number, AddressLink }","import React from 'react'\n\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\n\nimport { Box, CircularProgress, Chip } from '@material-ui/core'\nimport config from '../config'\n\nimport { Contract } from '@ethersproject/contracts'\nimport ETHERIUM from '../services/etherium'\nimport SELLERV1 from '../services/etherium/contracts/sellerv1'\nimport ETH from '../components/eth'\nimport { parseEther, formatEther } from '@ethersproject/units'\nimport { SaltSeason } from '../models/salt_season'\nimport { BigNumber } from '@ethersproject/bignumber'\n\ntype Props = {\n  saltSeason: SaltSeason\n}\n\nfunction SaltSeasonComponent(props: Props) {\n  const provider = ETHERIUM.getJsonRpcProvider(config.INFURA_JSON_RPC_API[props.saltSeason.networkId], props.saltSeason.networkId);\n\n  const context = useWeb3React<Web3Provider>()\n  const { account, library } = context\n\n  const [contract, setContract] = React.useState<Contract | undefined>(undefined)\n  React.useEffect(() => {\n    if (contract !== undefined) { return }\n    const _contract = SELLERV1.getContract(props.saltSeason.sellerContractAddress, provider)\n    setContract(_contract)\n  }, [contract])\n\n  const [contractToWrite, setContractToWrite] = React.useState<Contract | undefined>(undefined)\n  React.useEffect(() => {\n    if (contractToWrite !== undefined) { return }\n    if (!account || !library) { return }\n\n    const signer = library.getSigner(account)\n    const _contract = SELLERV1.getContract(props.saltSeason.sellerContractAddress, signer)\n    setContractToWrite(_contract)\n  }, [contractToWrite, account])\n\n  const [currentPrice, setCurrentPrice] = React.useState<BigNumber | undefined>(undefined)\n  React.useEffect(() => {\n    if (!!currentPrice) { return } // guard: already done\n    if (!contract) { return } // guard\n\n    (async () => {\n      const currentPrice = await contract.currentPrice()\n      setCurrentPrice(currentPrice)\n    })()\n  }, [currentPrice, contract])\n\n  const [notice, setNotice] = React.useState<string | undefined>(undefined)\n\n  const allHasBeenPurchased = props.saltSeason.tokenIds.length === props.saltSeason.purchasedItems + 1\n  const currentTokenId = !allHasBeenPurchased ? props.saltSeason.tokenIds[props.saltSeason.purchasedItems] : undefined\n\n  return (\n    <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\">\n      <div\n        style={{\n          flexBasis: '50%',\n          backgroundImage: `url(${props.saltSeason.posterUrl})`,\n          backgroundPosition: 'center',\n          backgroundSize: 'contain',\n          backgroundRepeat: 'no-repeat',\n          minHeight: 400\n        }}\n      />\n      <div style={{ flexBasis: '50%', padding: '3em', fontFamily: 'MontserraT, sans-serif' }}>\n        <p>SEASON: {props.saltSeason.number}</p><br/>\n        <p>TITLE: {props.saltSeason.title}</p><br/>\n        <p>NUMBER CREATED: {props.saltSeason.tokenIds.length}</p><br/>\n        <p>CURRENT PRICE: {!currentPrice ? <CircularProgress size={15}/> : <ETH.Number number={currentPrice}/>}</p><br/>\n        <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"between\">\n          <ul id=\"buttons02\" className=\"style1 buttons\">\n            { !allHasBeenPurchased && !!currentPrice && (\n              <li>\n                <a href=\"#\" className=\"button n01\" style={{color: 'lightgray', border: 'solid 1px lightgray'}}\n                  onClick={async (event) => {\n                    event.stopPropagation()\n                    setNotice(undefined)\n                    if (!account) { return setNotice(\"Connect to blockchain\") }\n                    try {\n                      await (contract as any).purchaseToken(props.saltSeason.erc721ContractAddress, currentTokenId, {\n                        value: currentPrice\n                      })\n                    } catch(error) {\n                      return setNotice(error.message)\n                    }\n                    return false\n                  }}\n                >\n                  <span className=\"label\">Purchase</span>\n                </a>\n              </li>\n            ) }\n            <li>\n              <a\n                href=\"https://redeem.saltandsatoshi.com/\" target=\"_blank\"\n                className=\"button n01\" style={{color: 'lightgray', border: 'solid 1px lightgray'}}\n              >\n                <span className=\"label\">Redeem</span>\n              </a>\n            </li>\n          </ul>\n        </Box>\n        { notice && <Chip label={notice} color=\"secondary\"/> }\n      </div>\n    </Box>)\n}\n\nexport default SaltSeasonComponent","import React from 'react'\n\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\n\nimport * as WEB3HOOKS from '../services/web3_hooks'\nimport Loading from '../components/loading'\nimport Connect from '../components/connect'\n\nimport * as SaltSeason from '../models/salt_season'\nimport SaltSeasonComponent from './_salt_season'\n\nimport { Box } from '@material-ui/core'\n\nfunction Reducer() {\n  const context = useWeb3React<Web3Provider>()\n  const { connector, chainId } = context\n\n  // handle logic to recognize the connector currently being activated\n  const [activatingConnector, setActivatingConnector] = React.useState<any>()\n  React.useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined)\n    }\n  }, [activatingConnector, connector])\n\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n  const triedEager = WEB3HOOKS.useEagerConnect()\n\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n  WEB3HOOKS.useInactiveListener(!triedEager || !!activatingConnector)\n\n  const [saltSeasons, setSaltSeasons] = React.useState<SaltSeason.SaltSeason[] | undefined>(undefined)\n  React.useEffect(() => { // Load auctions from Firebase\n    if (!!saltSeasons) { return } // guard: already done\n    // if (!chainId) { return }\n\n    (async () => {\n      const auctions = await SaltSeason.indexByNetworkId(chainId || 42)\n      setSaltSeasons(auctions)\n    })()\n  }, [saltSeasons, chainId])\n\n  if (!saltSeasons) { return <Loading/> }\n\n  return (\n    <div>\n      <section id=\"redemption-section\">\n        <div id=\"container19\" className=\"container default full screen\" style={{minHeight: 'auto'}}>\n          <div className=\"wrapper\">\n            <div className=\"inner\" style={{padding: '3em 6em 1em 6em'}}>\n              <h2 id=\"text33\">SaltSeasons</h2>\n              {/* { !account && (<p id=\"text34\" className=\"style2\">Please connect to see available auctions</p>)} */}\n              <Connect/>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <Box display=\"flex\" flexDirection=\"column\" style={{marginTop: '3em', color: 'lightgray'}}>\n        {\n          saltSeasons.map(saltSeason => (\n            <SaltSeasonComponent saltSeason={saltSeason}/>\n          ))\n        }\n      </Box>\n    </div>)\n}\n\nexport default Reducer","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { injected } from '../connectors'\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, [ activate ]) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n\nexport function useInactiveListener(suppress: boolean = false) {\n  const { active, error, activate } = useWeb3React()\n\n  useEffect((): any => {\n    const { ethereum } = window as any\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\")\n        activate(injected)\n      }\n      const handleChainChanged = (chainId: string | number) => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId)\n        activate(injected)\n      }\n      const handleAccountsChanged = (accounts: string[]) => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n        if (accounts.length > 0) {\n          activate(injected)\n        }\n      }\n      const handleNetworkChanged = (networkId: string | number) => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId)\n        activate(injected)\n      }\n\n      ethereum.on('connect', handleConnect)\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n      ethereum.on('networkChanged', handleNetworkChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect)\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n          ethereum.removeListener('networkChanged', handleNetworkChanged)\n        }\n      }\n    }\n  }, [active, error, suppress, activate])\n}","import React from 'react'\n\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\n\nimport RedeemPage from './redeem_page/page'\nimport ShowcasePage from './showcase_page/page'\nimport AuctionsPage from './auctions_page/page'\nimport SaltSeasonsPage from './saltseasons/index'\n\nfunction getLibrary(provider: any): Web3Provider {\n  const library = new Web3Provider(provider)\n  return library\n}\n\nfunction AppWrapper() {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      {/* <RedeemPage/> */}\n      {/* <ShowcasePage/> */}\n      {/* <AuctionsPage/> */}\n      <SaltSeasonsPage/>\n    </Web3ReactProvider>\n  )\n}\n\nexport default AppWrapper\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}