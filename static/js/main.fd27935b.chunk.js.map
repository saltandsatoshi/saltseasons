{"version":3,"sources":["config.ts","connectors.ts","components/spinner.tsx","services/etherium/chains.ts","components/connect.tsx","services/firebase.ts","models/salt_season.ts","services/etherium/index.ts","services/etherium/contracts/sellerv1.ts","services/etherium/contracts/salty.ts","services/etherium/contracts/erc20.ts","services/device.ts","components/eth.tsx","MARKETPLACE/_success.tsx","components/image.tsx","services/current_chain.ts","services/backdoor.ts","MARKETPLACE/_salt_season.tsx","MARKETPLACE/index.tsx","services/web3_hooks.ts","app.tsx","reportWebVitals.ts","index.tsx"],"names":["eip1152contractAddress","minterAddress","firebaseConfig","apiKey","projectId","INFURA_JSON_RPC_API","1","4","42","SELLER_CONTRACT_ADDRESS","SALTY_CONTRACT_ADDRESS","MIN_SALTY","BigNumber","from","POLLING_INTERVAL","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","config","bridge","qrcode","pollingInterval","ledger","LedgerConnector","chainId","url","trezor","TrezorConnector","manifestEmail","manifestAppUrl","Spinner","innerWidth","this","props","innerHeight","style","height","width","display","dangerouslySetInnerHTML","__html","React","Component","CHAINS","ConnectorButton","children","theConnector","title","context","useWeb3React","activate","connector","href","className","onClick","event","stopPropagation","Connect","account","deactivate","error","active","id","preventDefault","message","Connectors","Chip","fontWeight","color","label","Firebase","initializeApp","collection","firestore","indexByChainId","a","where","get","snapshot","items","docs","map","doc","ss","data","indexById","TokenId","getJsonRpcProvider","jsonRPCAPIURL","network","JsonRpcProvider","contractABI","getContract","contractAddress","providerOrSigner","Contract","isMobile","window","value","formatEther","number","showFirstDigitsNumber","slice","ticker","fontFamily","Success","useState","open","setOpen","state","Dialog","DialogTitle","DialogContent","padding","CircularProgress","onClose","DialogActions","Button","maxWidth","Link","Image","loading","backgroundColor","position","top","left","backgroundImage","imageUrl","backgroundPosition","backgroundSize","backgroundRepeat","currentChain","URLSearchParams","location","search","SaltSeasonComponent","saltSeason","provider","ETHERIUM","library","undefined","contract","setContract","useEffect","_contract","SELLERV1","sellerContractAddress","contractToWrite","setContractToWrite","signer","getSigner","currentPrice","setCurrentPrice","priceStep","setPriceStep","tokenPurchaseEvents","setTokenPurchaseEvents","queryFilter","filters","TokenPurchase","then","events","saltyContract","setSaltyContract","_value","SALTY","saltyBalance","setSaltyBalance","balanceOf","notice","setNotice","successState","setSuccessState","showMetamaskHint","setShowMetamaskHint","purchase","currentTokenId","console","log","erc721ContractAddress","parseInt","toHexString","purchaseToken","transactionResponse","wait","status","tokensPurchased","length","seasonIsOver","tokenIds","isReady","minSaltyBalanceGuardPassed","gte","Device","isRequiredNetwork","closed","Box","flexDirection","justifyContent","marginBottom","flexGrow","showThumbnails","showPlayButton","showFullscreenButton","posterUrls","posterUrl","original","renderItem","item","fontSize","textAlign","descriptionHtml","Icon","marginRight","sub","mul","add","target","Reducer","activatingConnector","setActivatingConnector","suppress","ethereum","on","handleConnect","handleChainChanged","handleAccountsChanged","accounts","handleNetworkChanged","networkId","removeListener","WEB3HOOKS","tried","setTried","isAuthorized","catch","_T","_setT","setSaltSeasons","saltSeasons","hash","seasonId","SaltSeason","document","querySelector","paddingLeft","paddingRight","minHeight","marginTop","getLibrary","Web3Provider","AppWrapper","MARKETPLACE","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fd27935b.chunk.js","sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\n\nconst eip1152contractAddress = '0xd07dc4262bcdbf85190c01c996b4c06a461d2430'\n\nconst minterAddress = '0x1efcb24f92daa1e04ba52e3d891beecee00c629d'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC8DwM9z-H9cSTCqHR4UGEvW86jL63sre0\", // \"AIzaSyCccgoP_7ndBWqvZkPbSml3JV4RpRIyERU\",\n  // authDomain: \"saltandsatoshi.firebaseapp.com\",\n  // databaseURL: \"https://saltandsatoshi.firebaseio.com\",\n  projectId: \"saltandsatoshi\",\n  // storageBucket: \"saltandsatoshi.appspot.com\",\n  // messagingSenderId: \"629543041272\",\n  // appId: \"1:629543041272:web:80d0b9de555810bbc9e30d\"\n}\n\nconst INFURA_JSON_RPC_API = {\n  1: `https://mainnet.infura.io/v3/663207cc32894545b804fbc519d9fa2a`,\n  4: `https://rinkeby.infura.io/v3/663207cc32894545b804fbc519d9fa2a`,\n  42: `https://kovan.infura.io/v3/663207cc32894545b804fbc519d9fa2a`,\n}\n\nconst SELLER_CONTRACT_ADDRESS = {\n  42: `0xD837F0658c74191056f222b3aCf3995e75AA3703`,\n}\n\nconst SALTY_CONTRACT_ADDRESS = {\n  1: `0xf157b7ba35089c9b0f02c24bbe1e03855dbe5c1f`,\n  4: `0x400a31BA7E9D428040B20eaBDb329E54124f4013`,\n  42: `0x0532b555269d3a993ea1ea4184c3ef97f11c5e8f`,\n}\n\nconst MIN_SALTY = BigNumber.from('69000000000000000000') // 0x3BD913E6C1DF40000 = 69000000000000000000 wei = 69 tokens\n\nexport default {\n  eip1152contractAddress,\n  minterAddress,\n  firebaseConfig,\n  INFURA_JSON_RPC_API,\n  SELLER_CONTRACT_ADDRESS,\n  SALTY_CONTRACT_ADDRESS,\n  MIN_SALTY\n}","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { LedgerConnector } from '@web3-react/ledger-connector'\nimport { TrezorConnector } from '@web3-react/trezor-connector'\n\nimport config from './config'\n\nconst POLLING_INTERVAL = 12000\n\nexport const injected = new InjectedConnector({ supportedChainIds: [1, 4, 42] })\n\nexport const walletconnect = new WalletConnectConnector({\n  rpc: { \n    1: config.INFURA_JSON_RPC_API[1],\n    // 4: config.INFURA_JSON_RPC_API[4],\n    // 42: config.INFURA_JSON_RPC_API[42],\n  },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL\n})\n\n\nexport const ledger = new LedgerConnector({\n  chainId: 1,\n  url: config.INFURA_JSON_RPC_API[1],\n  pollingInterval: POLLING_INTERVAL\n})\n\nexport const trezor = new TrezorConnector({\n  chainId: 1,\n  url: config.INFURA_JSON_RPC_API[1],\n  pollingInterval: POLLING_INTERVAL,\n  manifestEmail: 'dummy@abc.xyz',\n  manifestAppUrl: 'http://localhost:1234'\n})","import React from 'react'\n\ntype Props = {\n  width: string\n  height: string\n  innerWidth?: string\n  innerHeight?: string\n}\n\nclass Spinner extends React.Component<Props> {\n  render() {\n    const innerWidth = this.props.innerWidth || '200px'\n    const innerHeight = this.props.innerWidth || '200px'\n\n    return (\n      <div \n        style={{\n          height: this.props.height,\n          width: this.props.width,\n          display: 'flex'\n        }}\n        dangerouslySetInnerHTML={{\n          __html: `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"margin:auto;display:block;\" width=\"${innerWidth}\" height=\"${innerHeight}\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n          <g transform=\"translate(50 50)\">\n            <g transform=\"scale(0.26)\">\n              <g transform=\"translate(-50 -50)\">\n                <g>\n                  <animateTransform attributeName=\"transform\" type=\"rotate\" repeatCount=\"indefinite\" values=\"0 50 50;360 50 50\" keyTimes=\"0;1\" dur=\"0.7575757575757576s\"></animateTransform>\n                  <path fill-opacity=\"0.8\" fill=\"#f72585\" d=\"M50 50L50 0A50 50 0 0 1 100 50Z\"></path>\n                </g>\n                <g>\n                  <animateTransform attributeName=\"transform\" type=\"rotate\" repeatCount=\"indefinite\" values=\"0 50 50;360 50 50\" keyTimes=\"0;1\" dur=\"1.0101010101010102s\"></animateTransform>\n                  <path fill-opacity=\"0.8\" fill=\"#7209b7\" d=\"M50 50L50 0A50 50 0 0 1 100 50Z\" transform=\"rotate(90 50 50)\"></path>\n                </g>\n                <g>\n                  <animateTransform attributeName=\"transform\" type=\"rotate\" repeatCount=\"indefinite\" values=\"0 50 50;360 50 50\" keyTimes=\"0;1\" dur=\"1.5151515151515151s\"></animateTransform>\n                  <path fill-opacity=\"0.8\" fill=\"#3a0ca3\" d=\"M50 50L50 0A50 50 0 0 1 100 50Z\" transform=\"rotate(180 50 50)\"></path>\n                </g>\n                <g>\n                  <animateTransform attributeName=\"transform\" type=\"rotate\" repeatCount=\"indefinite\" values=\"0 50 50;360 50 50\" keyTimes=\"0;1\" dur=\"3.0303030303030303s\"></animateTransform>\n                  <path fill-opacity=\"0.8\" fill=\"#4361ee\" d=\"M50 50L50 0A50 50 0 0 1 100 50Z\" transform=\"rotate(270 50 50)\"></path>\n                </g>\n              </g>\n            </g>\n          </g>\n          </svg>`\n        }}\n      />)\n    }\n}\n\nexport default Spinner","export const CHAINS = {\n  1: 'Mainnet',\n  4: 'Rinkeby',\n  42: 'Kovan',\n}","import React from 'react'\n\nimport { Chip } from '@material-ui/core'\n\nimport { Web3ReactProvider, useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { CHAINS } from '../services/etherium/chains'\n\nimport * as Connectors from '../connectors'\n\nconst ConnectorButton: React.FC<{theConnector: any, title: string}> = ({children, theConnector, title}) => {\n  const context = useWeb3React<Web3Provider>()\n  const { connector, activate } = context\n  const isConnected = connector === theConnector\n\n  return (\n    <a\n      href=\"#\"\n      className=\"button n01\"\n      onClick={event => {\n        event.stopPropagation()\n        activate(theConnector)\n        return false\n      }}\n    >\n      <span className=\"label\">{title}</span>\n    </a>)\n}\n\nfunction Connect() {\n  const context = useWeb3React<Web3Provider>()\n  const { chainId, account, deactivate, active, error } = context\n\n  if (!account) {\n    return (\n      <>\n        <ul id=\"buttons02\" className=\"style1 buttons\">\n          <li>\n            <ConnectorButton theConnector={Connectors.injected} title=\"Metamask\"/>\n          </li>\n          <li>\n            <ConnectorButton theConnector={Connectors.ledger} title=\"Ledger\"/>\n          </li>\n          <li>\n            <ConnectorButton theConnector={Connectors.trezor} title=\"Trezor\"/>\n          </li>\n          <li>\n            <ConnectorButton theConnector={Connectors.walletconnect} title=\"Walletconnect\"/>\n          </li>\n        </ul>\n        { error && <Chip style={{ fontWeight: 'normal', color: '#878E99' }} className=\"style2 with-cool-font\" label={error.message} color=\"primary\"/> }\n      </>)\n  } else {\n    return (<>\n      <ul id=\"buttons02\" className=\"style1 buttons\">\n        <li>\n          <a href=\"#\" className=\"button n01\"\n            onClick={event => {\n              event.stopPropagation()\n              return false\n            }}\n          >\n            <span className=\"label\">{account}</span>\n          </a>\n        </li>\n        { (chainId !== 1) && (\n          <li>\n            <a href=\"#\" className=\"button n01\"\n            onClick={event => {\n              event.stopPropagation()\n              return false\n            }}\n          >\n            <span className=\"label\">{(CHAINS as any)[chainId!]}</span>\n          </a>\n          </li>\n        )}\n        <li>\n          <a href=\"#\" className=\"button n01\"\n            onClick={event => {\n              event.stopPropagation()\n              event.preventDefault()\n              deactivate()\n              return false\n            }}\n          >\n            <span className=\"label\">Logout</span>\n          </a>\n        </li>\n      </ul>\n      { error && <p id=\"text34\" className=\"style2\">⚠️ {error.message}</p> }\n    </>)\n  }\n}\n\nexport default Connect","import Firebase from 'firebase'\nimport \"firebase/firestore\"\n\nimport config from '../config'\n\nFirebase.initializeApp(config.firebaseConfig)\nconst firestore = Firebase.firestore()\n\nexport { firestore }","import * as Firebase from '../services/firebase'\n\nexport type SaltSeason = {\n  id: string\n  number: string\n  title: string\n  posterUrls: string[]\n  chainId: 1 | 4 | 42\n  erc721ContractAddress: string\n  sellerContractAddress: string\n  tokenIds: string[]\n  descriptionHtml: string\n  url: string\n  // purchasedItems: number\n}\n\nconst collection = Firebase.firestore.collection('saltseasons')\n\nexport async function indexByChainId(chainId: number) {\n  const snapshot = await collection.where('chainId', '==', chainId).get()\n  const items = snapshot.docs.map(doc => {\n    var ss = doc.data() as SaltSeason\n    ss.id = doc.id\n    return ss\n  })\n  return items\n}\n\nexport async function indexById(id: string) {\n  const snapshot = await collection.where('id', '==', id).get()\n  const items = snapshot.docs.map(doc => {\n    var ss = doc.data() as SaltSeason\n    ss.id = doc.id\n    return ss\n  })\n  return items\n}\n\nexport async function update(ss: SaltSeason) {\n  const doc = collection.doc(ss.id)\n  await doc.set(ss)\n}","import { JsonRpcProvider, JsonRpcSigner } from '@ethersproject/providers'\n\n// EIP 1155\n\nconst TokenId = '20272'\n\nfunction getJsonRpcProvider(jsonRPCAPIURL: string, network: number): JsonRpcProvider {\n  const provider = new JsonRpcProvider(jsonRPCAPIURL, network)\n  return provider\n}\n\nexport default { TokenId, getJsonRpcProvider }","import { Contract } from '@ethersproject/contracts'\nimport { JsonRpcProvider, JsonRpcSigner } from '@ethersproject/providers'\n\nconst contractABI = '[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_priceStep\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"currentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceStep\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"purchaseToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_payee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sendTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]'\nexport function getContract(contractAddress: string, providerOrSigner: JsonRpcProvider | JsonRpcSigner) {\n  return new Contract(contractAddress, contractABI, providerOrSigner)\n}\n\nexport default { contractABI, getContract }","import { Contract } from '@ethersproject/contracts'\nimport { JsonRpcProvider, JsonRpcSigner } from '@ethersproject/providers'\n\nimport { ABI } from './erc20'\n\nexport function getContract(contractAddress: string, providerOrSigner: JsonRpcProvider | JsonRpcSigner) {\n  return new Contract(contractAddress, ABI, providerOrSigner)\n}\n\nexport default { getContract }","export const ABI = '[ { \"constant\": true, \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"name\": \"\", \"type\": \"string\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [ { \"name\": \"_spender\", \"type\": \"address\" }, { \"name\": \"_value\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"name\": \"\", \"type\": \"bool\" } ], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"name\": \"\", \"type\": \"uint256\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [ { \"name\": \"_from\", \"type\": \"address\" }, { \"name\": \"_to\", \"type\": \"address\" }, { \"name\": \"_value\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"name\": \"\", \"type\": \"bool\" } ], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"name\": \"\", \"type\": \"uint8\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [ { \"name\": \"_owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"name\": \"balance\", \"type\": \"uint256\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"name\": \"\", \"type\": \"string\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [ { \"name\": \"_to\", \"type\": \"address\" }, { \"name\": \"_value\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"name\": \"\", \"type\": \"bool\" } ], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [ { \"name\": \"_owner\", \"type\": \"address\" }, { \"name\": \"_spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"name\": \"\", \"type\": \"uint256\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"payable\": true, \"stateMutability\": \"payable\", \"type\": \"fallback\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"name\": \"value\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"name\": \"value\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" } ]'","function isMobile() {\n  return window.innerWidth < 750\n}\n\nexport default { isMobile }","import React from 'react'\n\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { formatEther } from '@ethersproject/units'\n\nfunction Number(props: {\n  number: BigNumber\n  ticker?: string\n  showFirstDigitsNumber?: number\n}) {\n  let value = formatEther(props.number)\n  if (!!props.showFirstDigitsNumber) { value = value.slice(0, props.showFirstDigitsNumber!) }\n\n  if (!!props.ticker) {\n    return <>{`${props.ticker} ${value}`}</>\n  }\n\n  return <>\n    <span style={{fontFamily: 'Roboto'}}>Ξ</span>\n    &nbsp;\n    {value}\n  </>\n}\n\nfunction AddressLink(props: {\n  address: string\n  chainId: 1 | 4 | 42\n}) {\n  const url = `https://${ props.chainId === 42 ? `kovan.` : (props.chainId === 4 ? `rinkeby.` : ``)}etherscan.io/address/${props.address}`\n  return <a href={url} target=\"_blank\">{`${props.address.slice(0, 10)}...`}</a>\n}\n\nexport default { Number, AddressLink }","import React from 'react'\nimport Confetti from 'react-confetti'\n\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Link, CircularProgress, Button } from '@material-ui/core'\n\nexport type State = 'MINING' | 'FAILED' | 'SUCCESS'\n\ntype Props = {\n  // saltSeason: SaltSeason\n  // tokenId: number\n  state: State\n}\n\nfunction Success(props: Props) {\n  const [open, setOpen] = React.useState(true)\n\n  switch(props.state) {\n    case 'MINING':\n      return (\n        <Dialog open={true}>\n          <DialogTitle>Please wait</DialogTitle>\n          <DialogContent style={{ padding: 30 }}>\n            <CircularProgress/>\n          </DialogContent>\n        </Dialog>)\n\n    case 'FAILED':\n      return (\n        <Dialog open={open} onClose={() => setOpen(false)}>\n          <DialogTitle>Oops</DialogTitle>\n          <DialogContent style={{ padding: 30 }}>\n            <p></p>\n          </DialogContent>\n          <DialogActions style={{ padding: 30 }}>\n            <Button onClick={() => setOpen(false)}>Close</Button>\n          </DialogActions>\n        </Dialog>)\n\n    case 'SUCCESS':\n      return (\n        <>\n          <Dialog open={open} onClose={() => setOpen(false)} maxWidth=\"lg\">\n            <DialogTitle>Hooray! You are now the owner of a unique Salt Season NFT.</DialogTitle>\n            <DialogContent style={{ padding: 30 }}>\n              <Confetti\n                width={window.innerWidth || 300}\n                height={200}\n              />\n              <p>As a buyer of the Genesis Salt Season, you'll receive an airdrop of $SALTY proportionate to the value of ETH spent.</p><br/>\n              <p>You can now choose to redeem your NFT's physical counterpart... or not? It's all up to you.</p>\n            </DialogContent>\n            <DialogActions style={{ padding: 30 }}>\n              <Link href=\"https://saltandsatoshi.com/#redeem\">Redeem</Link>\n            </DialogActions>\n          </Dialog>\n        </>)\n  }\n}\n\nexport default Success","import React from 'react'\n\nimport Spinner from './spinner'\n\ntype Props = {\n  width: string\n  height: string\n  imageUrl: string\n  backgroundColor?: string\n}\n\ntype State = {\n  loading: boolean\n}\n\nclass Image extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      loading: true,\n    }\n  }\n\n  // async componentDidMount() {\n  //   if (loadedImages.includes(this.props.imageUrl)) {\n  //     this.setState({ loading: false })\n  //     return\n  //   }\n\n  //   await this.preloadImage()\n  //   this.setState({ loading: false })\n  // }\n\n  // async preloadImage() {\n  //   return new Promise((resolve, reject) => {\n  //     const i = new window.Image()\n  //     i.onload = () => {\n  //       loadedImages.push(this.props.imageUrl)\n  //       resolve(0)\n  //     }\n  //     i.onerror = reject\n  //     i.src = this.props.imageUrl\n  //   })\n  // }\n\n  render() {\n    // if (this.state.loading) {\n    //   return (\n    //     <Spinner \n    //       height={this.props.height}\n    //       width={this.props.width}\n    //     />)\n    // }\n\n    return (\n      <div\n        style={{\n          display: 'block',\n          height: this.props.height,\n          width: this.props.width,\n          backgroundColor: this.props.backgroundColor\n        }}\n      >\n        <div\n          style={{\n            position: 'absolute',\n            top: 0, left: 0,\n            height: this.props.height,\n            width: this.props.width,\n          }}\n        >\n          <Spinner \n            height={this.props.height}\n            width={this.props.width}\n          />\n        </div>\n        <div\n          style={{\n            position: 'absolute',\n            top: 0, left: 0,\n            backgroundImage: `url(${this.props.imageUrl})`,\n            backgroundPosition: 'center',\n            backgroundSize: 'contain',\n            backgroundRepeat: 'no-repeat',\n            height: this.props.height,\n            width: this.props.width,\n          }}\n        />\n        \n      </div>)\n  } \n}\n\nexport default Image","import { isBackdoor } from './backdoor'\n\nconst MAINNET = 1\n\nexport function currentChain(chainId?: number): number {\n  if (isBackdoor()) {\n    return chainId || MAINNET\n  }\n\n  return MAINNET\n}","export function isBackdoor() {\n  const urlParams = new URLSearchParams(window.location.search)\n  const foo = urlParams.get('foo')\n  return foo === \"bar\"\n}","import React from 'react'\n\nimport { useWeb3React } from '@web3-react/core'\nimport { TransactionReceipt, TransactionResponse, Web3Provider } from '@ethersproject/providers'\n\nimport {  Box, Chip, Icon } from '@material-ui/core'\nimport ImageGallery, { ReactImageGalleryItem } from 'react-image-gallery'\n\nimport config from '../config'\n\nimport { Contract, Event } from '@ethersproject/contracts'\n\nimport ETHERIUM from '../services/etherium'\nimport SELLERV1 from '../services/etherium/contracts/sellerv1'\nimport SALTY from '../services/etherium/contracts/salty'\nimport Device from '../services/device'\nimport { CHAINS } from '../services/etherium/chains'\n\nimport ETH from '../components/eth'\nimport * as SaltSeason from '../models/salt_season'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport Success, { State as SuccessState } from './_success'\nimport Image from '../components/image'\nimport Spinner from '../components/spinner'\nimport { currentChain } from '../services/current_chain'\n\ntype Props = {\n  saltSeason: SaltSeason.SaltSeason\n}\n\nconst REDEEM_PAGE_URL = \"https://saltandsatoshi.com/#redeem\"\nconst RINKEBY = 4\nconst KOVAN = 42\nconst MAINNET = 1\nconst OPEN_TO_THE_WORLD_MAINNET_SEASON_ID = \"mainnet_season1\"\n\nfunction SaltSeasonComponent(props: Props) {\n  const { saltSeason } = props\n  const provider = ETHERIUM.getJsonRpcProvider(config.INFURA_JSON_RPC_API[saltSeason.chainId], saltSeason.chainId);\n\n  const context = useWeb3React<Web3Provider>()\n  const { account, library, chainId } = context\n\n  const [contract, setContract] = React.useState<Contract | undefined>(undefined)\n  React.useEffect(() => {\n    if (contract !== undefined) { return }\n    const _contract = SELLERV1.getContract(saltSeason.sellerContractAddress, provider)\n    setContract(_contract)\n  }, [contract])\n\n  const [contractToWrite, setContractToWrite] = React.useState<Contract | undefined>(undefined)\n  React.useEffect(() => {\n    if (contractToWrite !== undefined) { return }\n    if (!account || !library) { return }\n\n    const signer = library.getSigner(account)\n    const _contract = SELLERV1.getContract(saltSeason.sellerContractAddress, signer)\n    setContractToWrite(_contract)\n  }, [contractToWrite, account])\n\n  const [currentPrice, setCurrentPrice] = React.useState<BigNumber | undefined>(undefined)\n  React.useEffect(() => {\n    if (!!currentPrice) { return } // guard: already done\n    if (!contract) { return } // guard\n\n    (async () => {\n      const currentPrice = await contract.currentPrice()\n      setCurrentPrice(currentPrice)\n    })()\n  }, [currentPrice, contract])\n\n  const [priceStep, setPriceStep] = React.useState<BigNumber | undefined>(undefined)\n  React.useEffect(() => {\n    if (!!priceStep) { return } // guard: already done\n    if (!contract) { return } // guard\n\n    (async () => {\n      const priceStep = await contract.priceStep()\n      setPriceStep(priceStep)\n    })()\n  }, [priceStep, contract])\n\n  const [tokenPurchaseEvents, setTokenPurchaseEvents] = React.useState<Event[] | undefined>(undefined)\n  React.useEffect(() => {\n    if (!contract) { return }\n    if (tokenPurchaseEvents !== undefined) { return }\n    (contract as any).queryFilter(contract.filters.TokenPurchase()).then((events: Event[]) => {\n      setTokenPurchaseEvents(events)\n    })\n  }, [contract, tokenPurchaseEvents])\n\n  // SALTY\n\n  const [saltyContract, setSaltyContract] = React.useState<Contract | undefined>(undefined)\n  React.useEffect(() => {\n    if (saltyContract !== undefined) { return }\n    if (!chainId) { return } // guard\n    const _value = SALTY.getContract(config.SALTY_CONTRACT_ADDRESS[currentChain(chainId) as 1 | 4 | 42], provider)\n    setSaltyContract(_value)\n  }, [saltyContract, chainId])\n\n  const [saltyBalance, setSaltyBalance] = React.useState<BigNumber | undefined>(undefined)\n  React.useEffect(() => {\n    if (!saltyContract) { return } // guard\n    if (!account) { return } // guard\n    if (saltyBalance !== undefined) { return }\n\n    (async () => {\n      const _value = await saltyContract.balanceOf(account)\n      setSaltyBalance(_value)\n    })()\n  }, [saltyContract, saltyBalance])\n\n  const [notice, setNotice] = React.useState<string | undefined>(undefined)\n  const [successState, setSuccessState] = React.useState<SuccessState | undefined>(undefined)\n  const [showMetamaskHint, setShowMetamaskHint] = React.useState<boolean>(false)\n\n  // PURCHASE\n\n  const purchase =  async () => {\n    if (!account) { throw(\"Connect to blockchain (no account)\") }\n    if (!currentPrice) { throw(\"Connect to blockchain (no contract data)\") }\n    if (!contractToWrite) { throw(\"Connect to blockchain (no contract)\") }\n    if (!currentTokenId) { throw(\"Season is over\") }\n\n    // for test\n    // const transactionResponse: TransactionResponse = await (contractToWrite as any).sendTo('0xC5Ddcb2812dd0D6a61a94310E4AA57c5122438Ca', 1)\n\n    console.log(\"PURCHASE: \", saltSeason.erc721ContractAddress, parseInt(currentTokenId, 10), currentPrice.toHexString())\n\n    const transactionResponse: TransactionResponse = await (contractToWrite as any).purchaseToken(\n      saltSeason.erc721ContractAddress,\n      parseInt(currentTokenId, 10), // is that the bignumber issue?\n      { value: currentPrice.toHexString() })\n\n    setSuccessState('MINING')\n\n    const transactionReceipt: TransactionReceipt = await transactionResponse.wait(1)\n    if (transactionReceipt.status === 0) { throw 'Transaction was reverted' }\n\n    // saltSeason.purchasedItems += 1\n    // await SaltSeason.update(saltSeason)\n  }\n\n  // OPERATIONAL\n  const tokensPurchased = (tokenPurchaseEvents || []).length\n  const seasonIsOver = saltSeason.tokenIds.length <= tokensPurchased\n\n  const isReady = (tokenPurchaseEvents !== undefined) && !!currentPrice\n  const currentTokenId = !seasonIsOver ? saltSeason.tokenIds[tokensPurchased] : undefined\n\n  const minSaltyBalanceGuardPassed = !!saltyBalance && (saltyBalance! as BigNumber).gte(config.MIN_SALTY)\n  const isMobile = Device.isMobile();\n  const isRequiredNetwork = saltSeason.chainId === chainId;\n  const closed = (chainId === MAINNET && saltSeason.id !== OPEN_TO_THE_WORLD_MAINNET_SEASON_ID)\n\n  // RENDER\n\n  return (\n    <div>\n      <Box display=\"flex\" flexDirection={isMobile ? 'column' : 'row'} justifyContent=\"center\" style={{marginBottom: '5em', width: '100%'}}>\n        <div style={isMobile ? { padding: '1em' } : { flexGrow: 1, width: '50%' }}>\n          <ImageGallery\n            showThumbnails={false}\n            showPlayButton={false}\n            showFullscreenButton={false}\n            items={saltSeason.posterUrls.map(posterUrl => ({ original: posterUrl }))}\n            renderItem={(item: ReactImageGalleryItem) => {\n              return (\n                <Image\n                  imageUrl={item.original}\n                  height='500px'\n                  width='100%'\n                />)\n            }}\n          />\n        </div>\n\n        <div style={isMobile ? { padding: '1em' } : { flexGrow: 1, width: '50%', padding: '0 3em' }} className=\"with-cool-font\">\n          <p style={{ fontSize: '2em', color: '#fff' }}>Season {saltSeason.number}</p><br/>\n          <h5>{saltSeason.title}</h5><br/>\n          \n          <div \n            style={{ fontWeight: 'normal', color: '#878E99', textAlign: 'justify', fontSize: 'smaller' }}\n            className=\"style2 with-cool-font\"\n            dangerouslySetInnerHTML={{ __html: saltSeason.descriptionHtml }}\n          />\n          <br/>\n\n          { closed && (\n            <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"between\">\n              <ul id=\"buttons02\" className=\"style1 buttons\">\n                <li>\n                  <a className=\"button n01\" onClick={event => { event.preventDefault(); return false; }}>\n                    <span className=\"label\">Coming soon</span>\n                    <Icon style={{marginRight: '0.5em'}}>query_builder</Icon>\n                  </a>\n                </li>\n              </ul>\n            </Box>\n          ) }\n          { !closed && (\n            <>\n              { isReady && (\n              <>\n                <p>Edition of {saltSeason.tokenIds.length}</p>\n                <br/>\n                <p>Current: {saltSeason.tokenIds.length - tokenPurchaseEvents!.length}</p>\n                <br/>\n                <p>Price {!!currentPrice && <ETH.Number number={currentPrice} showFirstDigitsNumber={5}/>}</p>\n                <br/>\n                <p>Price increment<sup>*</sup> {!!priceStep && <ETH.Number number={priceStep} showFirstDigitsNumber={5}/>}</p>\n                <br/>\n                { !!priceStep && (\n                    <p style={{fontSize: 'small', color: '#878E99'}}>\n                      <sup>*</sup>&nbsp;The price begins at&nbsp;\n                      <ETH.Number number={currentPrice!.sub(priceStep.mul(tokenPurchaseEvents!.length))} showFirstDigitsNumber={5}/>&nbsp;\n                      and will increase by&nbsp;\n                      <ETH.Number number={priceStep} showFirstDigitsNumber={5}/>&nbsp;\n                      after each purchase to an end price of&nbsp;\n                      <ETH.Number number={currentPrice!.add(priceStep.mul(saltSeason.tokenIds.length - tokenPurchaseEvents!.length - 1))}  showFirstDigitsNumber={5}/>\n                    </p>) }\n                <br/>\n              </>\n            )}\n            <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"between\">\n              { !isReady && <Spinner height=\"200px\" width=\"200px\"/> }\n              { isReady && (\n                <>\n                  { !isRequiredNetwork && (<>\n                    <ul id=\"buttons02\" className=\"style1 buttons\">\n                      <li>\n                        <a href=\"#\" className=\"button n01\" onClick={event => { event.preventDefault(); return false; }}>\n                          <span className=\"label\">Please switch to {CHAINS[saltSeason.chainId]}</span>\n                        </a>\n                      </li>\n                    </ul>\n                  </>)}\n                  { isRequiredNetwork && (<>\n                    { seasonIsOver && (\n                        <ul id=\"buttons02\" className=\"style1 buttons\">\n                          <li>\n                            <a href=\"#\" className=\"button n01\" onClick={event => { event.preventDefault(); return false; }}>\n                              <span className=\"label\">Season is over</span>\n                              <Icon style={{marginRight: '0.5em'}}>done</Icon>\n                            </a>\n                          </li>\n                        </ul>)\n                      } \n                      { !seasonIsOver && (\n                        <ul id=\"buttons02\" className=\"style1 buttons\">\n                          <li>\n                            <a href=\"#\" className=\"button n01\"\n                              onClick={async (event) => {\n                                event.stopPropagation()\n                                event.preventDefault()\n\n                                if (!minSaltyBalanceGuardPassed) { return false }\n                                \n                                setNotice(undefined)\n                                try {\n                                  setShowMetamaskHint(true)\n                                  await purchase()\n                                  setSuccessState('MINING')\n                                } catch(error) {\n                                  setSuccessState(undefined)\n                                  console.error(\"[ERROR]\", error)\n                                  setNotice(`${error.message || error}`)\n                                  return false\n                                } finally {\n                                  setShowMetamaskHint(false)\n                                }\n                                setSuccessState('SUCCESS')\n                                return false\n                              }}\n                            >\n                              { minSaltyBalanceGuardPassed === false && (\n                                <>\n                                  You must have <ETH.Number number={config.MIN_SALTY} ticker=\"$SALTY \"/> \n                                </>) }\n                              { minSaltyBalanceGuardPassed === true && (<>\n                                <span className=\"label\">Purchase</span><Icon style={{marginRight: '0.5em'}}>shopping_cart</Icon>\n                              </>) }\n                            </a>\n                          </li>\n                          <li>\n                            <a href={REDEEM_PAGE_URL} target=\"_blank\"\n                              className=\"button n01\"\n                            ><span className=\"label\">Redeem</span><Icon style={{marginRight: '0.5em'}}>local_shipping</Icon></a>\n                          </li>\n                        </ul>\n                      ) }\n                  </>)}\n                  \n                </>\n              ) }\n            </Box>\n            </>\n          ) }\n          \n          { notice && <Chip label={notice} color=\"secondary\"/> }\n        </div>\n\n        {/* <div style={{position: 'relative', height: 600, flexGrow: '65%'}} ref={carouselRef}>\n          <AutoRotatingCarousel\n            open={true}\n            autoplay={true}\n            containerStyle={{position: 'absolute', top: 0, width: '100%'}}\n            ModalProps={{disablePortal: true, hideBackdrop: true, disableScrollLock: true}}\n            ButtonProps={{variant: 'outlined'}}\n            interval={5000}\n          >\n            <Slide\n              media={\n                <div\n                  style={{\n                    backgroundImage: `url(${saltSeason.posterUrl})`,\n                    backgroundPosition: 'center',\n                    backgroundSize: 'contain',\n                    backgroundRepeat: 'no-repeat',\n                    height: '100%',\n                    width: '100%'\n                  }}\n                />\n              }\n              mediaBackgroundStyle={{ backgroundColor: 'black', height: 400 }}\n              style={{ backgroundColor: 'black' }}\n              title={`SEASON ${saltSeason.number}`}\n              mobile\n              landscape\n              // subtitle='Just using this will blow your mind.'\n            />\n            <Slide\n              media={\n                <div\n                  style={{\n                    backgroundImage: `url(${\"https://firebasestorage.googleapis.com/v0/b/saltandsatoshi.appspot.com/o/SaltSeasons%2FSalt%20Season%201%20Ethereum%20GIF%20600.gif?alt=media&token=2ed90c2b-2864-40bc-9710-b564348c33a0\"})`,\n                    backgroundPosition: 'center',\n                    backgroundSize: 'contain',\n                    backgroundRepeat: 'no-repeat',\n                    height: '100%',\n                    width: '100%'\n                  }}\n                />\n              }\n              mediaBackgroundStyle={{ backgroundColor: 'black', height: 400 }}\n              style={{ backgroundColor: 'black' }}\n              title={`SEASON ${saltSeason.number}`}\n              // subtitle='Just using this will blow your mind.'\n            />\n          </AutoRotatingCarousel> \n        </div> */}\n      </Box>\n      { !!successState && <Success state={successState}/> }\n      { showMetamaskHint && <div className=\"metmask-hint\"><span>Please confirm a pending Ethereum transaction.</span></div> }\n    </div>)\n}\n\nexport default SaltSeasonComponent","import React from 'react'\n\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\n\nimport * as WEB3HOOKS from '../services/web3_hooks'\nimport Spinner from '../components/spinner'\nimport Connect from '../components/connect'\n\nimport * as SaltSeason from '../models/salt_season'\nimport SaltSeasonComponent from './_salt_season'\n\nimport { Box, Icon } from '@material-ui/core'\n\nimport { currentChain } from '../services/current_chain'\n\nfunction Reducer() {\n  const context = useWeb3React<Web3Provider>()\n  const { connector, chainId } = context\n\n  // handle logic to recognize the connector currently being activated\n  const [activatingConnector, setActivatingConnector] = React.useState<any>()\n  React.useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined)\n    }\n  }, [activatingConnector, connector])\n\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n  const triedEager = WEB3HOOKS.useEagerConnect()\n\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n  WEB3HOOKS.useInactiveListener(!triedEager || !!activatingConnector)\n\n  // Trick to reset on chain change\n  const [_T, _setT] = React.useState<number | undefined>(chainId)\n  React.useEffect(() => {\n    if (!!_T && _T !== chainId) {\n      setSaltSeasons(undefined)\n    }\n    _setT(chainId)\n  }, [_T, chainId])\n\n  const [saltSeasons, setSaltSeasons] = React.useState<SaltSeason.SaltSeason[] | undefined>(undefined)\n  React.useEffect(() => { // Load auctions from Firebase\n    if (!!saltSeasons) { return } // guard: already done\n    // if (!chainId) { return }\n\n    \n    (async () => {\n      if (!!window.location.hash) {\n        const seasonId = window.location.hash.slice(1)\n        let items = await SaltSeason.indexById(seasonId)\n        setSaltSeasons(items)\n      } else {\n        console.log(\"currentChain(chainId)\", currentChain(chainId))\n\n        let items = await SaltSeason.indexByChainId(currentChain(chainId))\n        setSaltSeasons(items)\n      }\n    })()\n  }, [saltSeasons, chainId])\n\n  if (!saltSeasons) { return <Spinner height=\"200px\" width=\"200px\"/> }\n\n  // Dirty\n  (document.querySelector(\"#main > .inner\") as any).style.paddingLeft = 0;\n  (document.querySelector(\"#main > .inner\") as any).style.paddingRight = 0;\n\n  return (\n    <div>\n      <section id=\"redemption-section\">\n        <div id=\"container19\" className=\"container default full screen\" style={{minHeight: 'auto'}}>\n          <div className=\"wrapper\">\n            <div className=\"inner\" style={{padding: '3em 0em 1em 0em'}}>\n              {/* <h2 id=\"text33\" style={{ fontWeight: 'normal', textTransform: 'none', color: '#fff' }} className=\"with-cool-font\">Salt Seasons</h2>\n              \n              <div style={{ fontWeight: 'normal', color: '#878E99' }} className=\"style2 with-cool-font\">\n                <p>Welcome to Salt Seasons - join us on the quest to close the divide between physical and digital collections.</p>\n                <br/>\n                <p>The first Salt Season, \"Can't Be Stopped\" consists of two editions of 20 unique collectible hoodies, each linked 1:1 to an NFT which is verifiable via an NFC tag.</p>\n              </div> */}\n              \n              <Connect/>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <Box display=\"flex\" flexDirection=\"column\" style={{marginTop: '3em', color: 'lightgray'}}>\n        {\n          saltSeasons.map(saltSeason => (\n            <SaltSeasonComponent saltSeason={saltSeason} key={saltSeason.id}/>\n          ))\n        }\n      </Box>\n    </div>)\n}\n\nexport default Reducer","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { injected } from '../connectors'\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, [ activate ]) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n\nexport function useInactiveListener(suppress: boolean = false) {\n  const { active, error, activate } = useWeb3React()\n\n  useEffect((): any => {\n    const { ethereum } = window as any\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\")\n        activate(injected)\n      }\n      const handleChainChanged = (chainId: string | number) => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId)\n        activate(injected)\n      }\n      const handleAccountsChanged = (accounts: string[]) => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n        if (accounts.length > 0) {\n          activate(injected)\n        }\n      }\n      const handleNetworkChanged = (networkId: string | number) => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId)\n        activate(injected)\n      }\n\n      ethereum.on('connect', handleConnect)\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n      ethereum.on('networkChanged', handleNetworkChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect)\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n          ethereum.removeListener('networkChanged', handleNetworkChanged)\n        }\n      }\n    }\n  }, [active, error, suppress, activate])\n}","import React from 'react'\n\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\n\nimport REDEEM from './REDEEM/page'\n// import ShowcasePage from './showcase_page/page'\n// import AuctionsPage from './auctions_page/page'\nimport MARKETPLACE from './MARKETPLACE/index'\nimport SHOWCASE from './SHOWCASE/index'\n\nfunction getLibrary(provider: any): Web3Provider {\n  const library = new Web3Provider(provider)\n  return library\n}\n\nfunction AppWrapper() {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      {/* <ShowcasePage/> */}\n      {/* <AuctionsPage/> */}\n\n      {/* <REDEEM/> */}\n      <MARKETPLACE/>\n      {/* <SHOWCASE/> */}\n    </Web3ReactProvider>\n  )\n}\n\nexport default AppWrapper\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}